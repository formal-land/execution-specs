Module(
    body=[
        Expr(
            value=Constant(value='\nEthereum Sync\n^^^^^^^^^^^^^\n\nUsing an RPC provider, fetch each block and validate it with the specification.\n')),
        Import(
            names=[
                alias(name='argparse')]),
        Import(
            names=[
                alias(name='json')]),
        Import(
            names=[
                alias(name='logging')]),
        Import(
            names=[
                alias(name='os')]),
        Import(
            names=[
                alias(name='pkgutil')]),
        Import(
            names=[
                alias(name='shutil')]),
        Import(
            names=[
                alias(name='time')]),
        ImportFrom(
            module='queue',
            names=[
                alias(name='Empty'),
                alias(name='Full'),
                alias(name='Queue')],
            level=0),
        ImportFrom(
            module='threading',
            names=[
                alias(name='Thread')],
            level=0),
        ImportFrom(
            module='typing',
            names=[
                alias(name='Any'),
                alias(name='Dict'),
                alias(name='List'),
                alias(name='Optional'),
                alias(name='TypeVar'),
                alias(name='Union'),
                alias(name='cast')],
            level=0),
        ImportFrom(
            module='urllib',
            names=[
                alias(name='request')],
            level=0),
        ImportFrom(
            module='ethereum_types.bytes',
            names=[
                alias(name='Bytes0'),
                alias(name='Bytes256')],
            level=0),
        ImportFrom(
            module='ethereum_types.numeric',
            names=[
                alias(name='U64'),
                alias(name='U256'),
                alias(name='Uint')],
            level=0),
        ImportFrom(
            module='ethereum',
            names=[
                alias(name='genesis'),
                alias(name='rlp')],
            level=0),
        ImportFrom(
            module='ethereum.utils.hexadecimal',
            names=[
                alias(name='hex_to_bytes'),
                alias(name='hex_to_bytes8'),
                alias(name='hex_to_bytes32'),
                alias(name='hex_to_u64'),
                alias(name='hex_to_u256'),
                alias(name='hex_to_uint')],
            level=0),
        ImportFrom(
            module='forks',
            names=[
                alias(name='Hardfork')],
            level=1),
        Assign(
            targets=[
                Name(id='T', ctx=Store())],
            value=Call(
                func=Name(id='TypeVar', ctx=Load()),
                args=[
                    Constant(value='T')],
                keywords=[])),
        ClassDef(
            name='RpcError',
            bases=[
                Name(id='Exception', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Error message and code returned by the RPC provider.\n    ')),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='code',
                                annotation=Name(id='int', ctx=Load())),
                            arg(
                                arg='message',
                                annotation=Name(id='str', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='super', ctx=Load()),
                                        args=[],
                                        keywords=[]),
                                    attr='__init__',
                                    ctx=Load()),
                                args=[
                                    Name(id='message', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='code',
                                    ctx=Store())],
                            value=Name(id='code', ctx=Load()))],
                    decorator_list=[],
                    returns=Constant(value=None))],
            decorator_list=[]),
        ClassDef(
            name='ForkTracking',
            bases=[],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Enables subclasses to track the current fork.\n    ')),
                AnnAssign(
                    target=Name(id='forks', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='List', ctx=Load()),
                        slice=Name(id='Hardfork', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_number', ctx=Store()),
                    annotation=Name(id='Uint', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='active_fork_index', ctx=Store()),
                    annotation=Name(id='int', ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='forks',
                                annotation=Subscript(
                                    value=Name(id='List', ctx=Load()),
                                    slice=Name(id='Hardfork', ctx=Load()),
                                    ctx=Load())),
                            arg(
                                arg='block_number',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='block_timestamp',
                                annotation=Name(id='U256', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='forks',
                                    ctx=Store())],
                            value=Name(id='forks', ctx=Load())),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='set_block',
                                    ctx=Load()),
                                args=[
                                    Name(id='block_number', ctx=Load()),
                                    Name(id='block_timestamp', ctx=Load())],
                                keywords=[]))],
                    decorator_list=[]),
                FunctionDef(
                    name='active_fork',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Currently executing hard fork.\n        ')),
                        Return(
                            value=Subscript(
                                value=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='forks',
                                    ctx=Load()),
                                slice=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='active_fork_index',
                                    ctx=Load()),
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Hardfork', ctx=Load())),
                FunctionDef(
                    name='next_fork',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Hard fork that follows the currently executing hard fork.\n        ')),
                        Try(
                            body=[
                                Return(
                                    value=Subscript(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='forks',
                                            ctx=Load()),
                                        slice=BinOp(
                                            left=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='active_fork_index',
                                                ctx=Load()),
                                            op=Add(),
                                            right=Constant(value=1)),
                                        ctx=Load()))],
                            handlers=[
                                ExceptHandler(
                                    type=Name(id='IndexError', ctx=Load()),
                                    body=[
                                        Return(
                                            value=Constant(value=None))])],
                            orelse=[],
                            finalbody=[])],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Hardfork', ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='module',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='name',
                                annotation=Name(id='str', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Return a module from the current hard fork.\n        ')),
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='active_fork',
                                        ctx=Load()),
                                    attr='module',
                                    ctx=Load()),
                                args=[
                                    Name(id='name', ctx=Load())],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='set_block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='block_number',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='block_timestamp',
                                annotation=Name(id='U256', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Set the block number and switch to the correct fork.')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_number',
                                    ctx=Store())],
                            value=Name(id='block_number', ctx=Load())),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='active_fork_index',
                                    ctx=Store())],
                            value=Constant(value=0)),
                        While(
                            test=BoolOp(
                                op=And(),
                                values=[
                                    Compare(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='next_fork',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='next_fork',
                                                ctx=Load()),
                                            attr='has_activated',
                                            ctx=Load()),
                                        args=[
                                            Name(id='block_number', ctx=Load()),
                                            Name(id='block_timestamp', ctx=Load())],
                                        keywords=[])]),
                            body=[
                                AugAssign(
                                    target=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='active_fork_index',
                                        ctx=Store()),
                                    op=Add(),
                                    value=Constant(value=1))],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='advance_block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='timestamp',
                                annotation=Name(id='U256', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Increment the block number, return `True` if the fork changed.')),
                        AugAssign(
                            target=Attribute(
                                value=Name(id='self', ctx=Load()),
                                attr='block_number',
                                ctx=Store()),
                            op=Add(),
                            value=Call(
                                func=Name(id='Uint', ctx=Load()),
                                args=[
                                    Constant(value=1)],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='new_fork', ctx=Store())],
                            value=Constant(value=False)),
                        While(
                            test=BoolOp(
                                op=And(),
                                values=[
                                    Compare(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='next_fork',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='next_fork',
                                                ctx=Load()),
                                            attr='has_activated',
                                            ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='block_number',
                                                ctx=Load()),
                                            Name(id='timestamp', ctx=Load())],
                                        keywords=[])]),
                            body=[
                                AugAssign(
                                    target=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='active_fork_index',
                                        ctx=Store()),
                                    op=Add(),
                                    value=Constant(value=1)),
                                Assign(
                                    targets=[
                                        Name(id='new_fork', ctx=Store())],
                                    value=Constant(value=True))],
                            orelse=[]),
                        Return(
                            value=Name(id='new_fork', ctx=Load()))],
                    decorator_list=[],
                    returns=Name(id='bool', ctx=Load()))],
            decorator_list=[]),
        ClassDef(
            name='BlockDownloader',
            bases=[
                Name(id='ForkTracking', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='Downloads blocks from the RPC provider.')),
                AnnAssign(
                    target=Name(id='queue', ctx=Store()),
                    annotation=Name(id='Queue', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='log', ctx=Store()),
                    annotation=Attribute(
                        value=Name(id='logging', ctx=Load()),
                        attr='Logger',
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='rpc_url', ctx=Store()),
                    annotation=Name(id='str', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='geth', ctx=Store()),
                    annotation=Name(id='bool', ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='forks',
                                annotation=Subscript(
                                    value=Name(id='List', ctx=Load()),
                                    slice=Name(id='Hardfork', ctx=Load()),
                                    ctx=Load())),
                            arg(
                                arg='log',
                                annotation=Attribute(
                                    value=Name(id='logging', ctx=Load()),
                                    attr='Logger',
                                    ctx=Load())),
                            arg(
                                arg='rpc_url',
                                annotation=Name(id='str', ctx=Load())),
                            arg(
                                arg='geth',
                                annotation=Name(id='bool', ctx=Load())),
                            arg(
                                arg='first_block',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='first_block_timestamp',
                                annotation=Name(id='U256', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='ForkTracking', ctx=Load()),
                                    attr='__init__',
                                    ctx=Load()),
                                args=[
                                    Name(id='self', ctx=Load()),
                                    Name(id='forks', ctx=Load()),
                                    Name(id='first_block', ctx=Load()),
                                    Name(id='first_block_timestamp', ctx=Load())],
                                keywords=[])),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='active_fork_index',
                                    ctx=Load()),
                                ops=[
                                    Gt()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                AugAssign(
                                    target=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='active_fork_index',
                                        ctx=Store()),
                                    op=Sub(),
                                    value=Constant(value=1))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='queue',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='Queue', ctx=Load()),
                                args=[],
                                keywords=[
                                    keyword(
                                        arg='maxsize',
                                        value=Constant(value=512))])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='log',
                                    ctx=Store())],
                            value=Name(id='log', ctx=Load())),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='rpc_url',
                                    ctx=Store())],
                            value=Name(id='rpc_url', ctx=Load())),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='geth',
                                    ctx=Store())],
                            value=Name(id='geth', ctx=Load())),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='Thread', ctx=Load()),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                arg='target',
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='download',
                                                    ctx=Load())),
                                            keyword(
                                                arg='name',
                                                value=Constant(value='download')),
                                            keyword(
                                                arg='daemon',
                                                value=Constant(value=True))]),
                                    attr='start',
                                    ctx=Load()),
                                args=[],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='take_block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Pop a block of the download queue.\n        ')),
                        While(
                            test=Constant(value=True),
                            body=[
                                Try(
                                    body=[
                                        Return(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='queue',
                                                        ctx=Load()),
                                                    attr='get',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[
                                                    keyword(
                                                        arg='timeout',
                                                        value=Constant(value=1))]))],
                                    handlers=[
                                        ExceptHandler(
                                            type=Name(id='Empty', ctx=Load()),
                                            body=[
                                                Pass()])],
                                    orelse=[],
                                    finalbody=[])],
                            orelse=[])],
                    decorator_list=[],
                    returns=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Any', ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='download',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch chunks of blocks from the RPC provider.\n        ')),
                        Assign(
                            targets=[
                                Name(id='running', ctx=Store())],
                            value=Constant(value=True)),
                        While(
                            test=Name(id='running', ctx=Load()),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='count', ctx=Store())],
                                    value=Call(
                                        func=Name(id='Uint', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='max', ctx=Load()),
                                                args=[
                                                    Constant(value=1),
                                                    BinOp(
                                                        left=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='queue',
                                                                ctx=Load()),
                                                            attr='maxsize',
                                                            ctx=Load()),
                                                        op=FloorDiv(),
                                                        right=Constant(value=2))],
                                                keywords=[])],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='replies', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='fetch_blocks',
                                            ctx=Load()),
                                        args=[
                                            BinOp(
                                                left=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='block_number',
                                                    ctx=Load()),
                                                op=Add(),
                                                right=Call(
                                                    func=Name(id='Uint', ctx=Load()),
                                                    args=[
                                                        Constant(value=1)],
                                                    keywords=[])),
                                            Name(id='count', ctx=Load())],
                                        keywords=[])),
                                For(
                                    target=Name(id='reply', ctx=Store()),
                                    iter=Name(id='replies', ctx=Load()),
                                    body=[
                                        AnnAssign(
                                            target=Name(id='to_push', ctx=Store()),
                                            annotation=Subscript(
                                                value=Name(id='Optional', ctx=Load()),
                                                slice=Name(id='bytes', ctx=Load()),
                                                ctx=Load()),
                                            simple=1),
                                        If(
                                            test=Call(
                                                func=Name(id='isinstance', ctx=Load()),
                                                args=[
                                                    Name(id='reply', ctx=Load()),
                                                    Name(id='RpcError', ctx=Load())],
                                                keywords=[]),
                                            body=[
                                                If(
                                                    test=Compare(
                                                        left=Attribute(
                                                            value=Name(id='reply', ctx=Load()),
                                                            attr='code',
                                                            ctx=Load()),
                                                        ops=[
                                                            NotEq()],
                                                        comparators=[
                                                            UnaryOp(
                                                                op=USub(),
                                                                operand=Constant(value=32000))]),
                                                    body=[
                                                        Raise(
                                                            exc=Name(id='reply', ctx=Load()))],
                                                    orelse=[]),
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='logging', ctx=Load()),
                                                            attr='info',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='reached end of chain')],
                                                        keywords=[
                                                            keyword(
                                                                arg='exc_info',
                                                                value=Name(id='reply', ctx=Load()))])),
                                                Assign(
                                                    targets=[
                                                        Name(id='running', ctx=Store())],
                                                    value=Constant(value=False)),
                                                Assign(
                                                    targets=[
                                                        Name(id='to_push', ctx=Store())],
                                                    value=Constant(value=None))],
                                            orelse=[
                                                Assign(
                                                    targets=[
                                                        Name(id='to_push', ctx=Store())],
                                                    value=Name(id='reply', ctx=Load()))]),
                                        While(
                                            test=Constant(value=True),
                                            body=[
                                                Try(
                                                    body=[
                                                        Expr(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='queue',
                                                                        ctx=Load()),
                                                                    attr='put',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Name(id='to_push', ctx=Load())],
                                                                keywords=[
                                                                    keyword(
                                                                        arg='timeout',
                                                                        value=Constant(value=1))])),
                                                        Break()],
                                                    handlers=[
                                                        ExceptHandler(
                                                            type=Name(id='Full', ctx=Load()),
                                                            body=[
                                                                Pass()])],
                                                    orelse=[],
                                                    finalbody=[])],
                                            orelse=[])],
                                    orelse=[])],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='fetch_blocks',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='first',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='count',
                                annotation=Name(id='Uint', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the block specified by the given number from the RPC provider.\n        ')),
                        If(
                            test=Attribute(
                                value=Name(id='self', ctx=Load()),
                                attr='geth',
                                ctx=Load()),
                            body=[
                                Return(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='fetch_blocks_debug',
                                            ctx=Load()),
                                        args=[
                                            Name(id='first', ctx=Load()),
                                            Name(id='count', ctx=Load())],
                                        keywords=[]))],
                            orelse=[
                                Return(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='fetch_blocks_eth',
                                            ctx=Load()),
                                        args=[
                                            Name(id='first', ctx=Load()),
                                            Name(id='count', ctx=Load())],
                                        keywords=[]))])],
                    decorator_list=[],
                    returns=Subscript(
                        value=Name(id='List', ctx=Load()),
                        slice=Subscript(
                            value=Name(id='Union', ctx=Load()),
                            slice=Tuple(
                                elts=[
                                    Name(id='Any', ctx=Load()),
                                    Name(id='RpcError', ctx=Load())],
                                ctx=Load()),
                            ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='fetch_blocks_debug',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='first',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='count',
                                annotation=Name(id='Uint', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the block specified by the given number from the RPC provider as\n        an RLP encoded byte array.\n        ')),
                        If(
                            test=Compare(
                                left=Name(id='count', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                Return(
                                    value=List(elts=[], ctx=Load()))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='calls', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Name(id='number', ctx=Store()),
                            iter=Call(
                                func=Name(id='range', ctx=Load()),
                                args=[
                                    Name(id='first', ctx=Load()),
                                    BinOp(
                                        left=Name(id='first', ctx=Load()),
                                        op=Add(),
                                        right=Name(id='count', ctx=Load()))],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='calls', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Dict(
                                                keys=[
                                                    Constant(value='jsonrpc'),
                                                    Constant(value='id'),
                                                    Constant(value='method'),
                                                    Constant(value='params')],
                                                values=[
                                                    Constant(value='2.0'),
                                                    Call(
                                                        func=Name(id='hex', ctx=Load()),
                                                        args=[
                                                            Name(id='number', ctx=Load())],
                                                        keywords=[]),
                                                    Constant(value='debug_getRawBlock'),
                                                    List(
                                                        elts=[
                                                            Call(
                                                                func=Name(id='hex', ctx=Load()),
                                                                args=[
                                                                    Name(id='number', ctx=Load())],
                                                                keywords=[])],
                                                        ctx=Load())])],
                                        keywords=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='data', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='dumps',
                                            ctx=Load()),
                                        args=[
                                            Name(id='calls', ctx=Load())],
                                        keywords=[]),
                                    attr='encode',
                                    ctx=Load()),
                                args=[
                                    Constant(value='utf-8')],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='debug',
                                    ctx=Load()),
                                args=[
                                    Constant(value='fetching blocks [%d, %d)...'),
                                    Name(id='first', ctx=Load()),
                                    BinOp(
                                        left=Name(id='first', ctx=Load()),
                                        op=Add(),
                                        right=Name(id='count', ctx=Load()))],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='post', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='request', ctx=Load()),
                                    attr='Request',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='rpc_url',
                                        ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='data',
                                        value=Name(id='data', ctx=Load())),
                                    keyword(
                                        arg='headers',
                                        value=Dict(
                                            keys=[
                                                Constant(value='Content-Length'),
                                                Constant(value='Content-Type'),
                                                Constant(value='User-Agent')],
                                            values=[
                                                Call(
                                                    func=Name(id='str', ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Name(id='len', ctx=Load()),
                                                            args=[
                                                                Name(id='data', ctx=Load())],
                                                            keywords=[])],
                                                    keywords=[]),
                                                Constant(value='application/json'),
                                                Constant(value='ethereum-spec-sync')]))])),
                        With(
                            items=[
                                withitem(
                                    context_expr=Call(
                                        func=Attribute(
                                            value=Name(id='request', ctx=Load()),
                                            attr='urlopen',
                                            ctx=Load()),
                                        args=[
                                            Name(id='post', ctx=Load())],
                                        keywords=[]),
                                    optional_vars=Name(id='response', ctx=Store()))],
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='replies', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='load',
                                            ctx=Load()),
                                        args=[
                                            Name(id='response', ctx=Load())],
                                        keywords=[])),
                                If(
                                    test=UnaryOp(
                                        op=Not(),
                                        operand=Call(
                                            func=Name(id='isinstance', ctx=Load()),
                                            args=[
                                                Name(id='replies', ctx=Load()),
                                                Name(id='list', ctx=Load())],
                                            keywords=[])),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='got non-list JSON-RPC response. replies=%r'),
                                                    Name(id='replies', ctx=Load())],
                                                keywords=[])),
                                        Raise(
                                            exc=Name(id='ValueError', ctx=Load()))],
                                    orelse=[]),
                                AnnAssign(
                                    target=Name(id='block_rlps', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='Dict', ctx=Load()),
                                        slice=Tuple(
                                            elts=[
                                                Name(id='Uint', ctx=Load()),
                                                Subscript(
                                                    value=Name(id='Union', ctx=Load()),
                                                    slice=Tuple(
                                                        elts=[
                                                            Name(id='RpcError', ctx=Load()),
                                                            Name(id='bytes', ctx=Load())],
                                                        ctx=Load()),
                                                    ctx=Load())],
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=Dict(keys=[], values=[]),
                                    simple=1),
                                For(
                                    target=Name(id='reply', ctx=Store()),
                                    iter=Name(id='replies', ctx=Load()),
                                    body=[
                                        Try(
                                            body=[
                                                Assign(
                                                    targets=[
                                                        Name(id='reply_id', ctx=Store())],
                                                    value=Call(
                                                        func=Name(id='Uint', ctx=Load()),
                                                        args=[
                                                            Call(
                                                                func=Name(id='int', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='reply', ctx=Load()),
                                                                        slice=Constant(value='id'),
                                                                        ctx=Load()),
                                                                    Constant(value=0)],
                                                                keywords=[])],
                                                        keywords=[]))],
                                            handlers=[
                                                ExceptHandler(
                                                    type=Name(id='Exception', ctx=Load()),
                                                    body=[
                                                        Expr(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='log',
                                                                        ctx=Load()),
                                                                    attr='exception',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value='unable to parse RPC id. reply=%r'),
                                                                    Name(id='reply', ctx=Load())],
                                                                keywords=[])),
                                                        Raise()])],
                                            orelse=[],
                                            finalbody=[]),
                                        If(
                                            test=BoolOp(
                                                op=Or(),
                                                values=[
                                                    Compare(
                                                        left=Name(id='reply_id', ctx=Load()),
                                                        ops=[
                                                            Lt()],
                                                        comparators=[
                                                            Name(id='first', ctx=Load())]),
                                                    Compare(
                                                        left=Name(id='reply_id', ctx=Load()),
                                                        ops=[
                                                            GtE()],
                                                        comparators=[
                                                            BinOp(
                                                                left=Name(id='first', ctx=Load()),
                                                                op=Add(),
                                                                right=Name(id='count', ctx=Load()))])]),
                                            body=[
                                                Raise(
                                                    exc=Call(
                                                        func=Name(id='Exception', ctx=Load()),
                                                        args=[
                                                            Constant(value='mismatched request id')],
                                                        keywords=[]))],
                                            orelse=[]),
                                        If(
                                            test=Compare(
                                                left=Constant(value='error'),
                                                ops=[
                                                    In()],
                                                comparators=[
                                                    Name(id='reply', ctx=Load())]),
                                            body=[
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='block_rlps', ctx=Load()),
                                                            slice=Name(id='reply_id', ctx=Load()),
                                                            ctx=Store())],
                                                    value=Call(
                                                        func=Name(id='RpcError', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='code'),
                                                                ctx=Load()),
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='message'),
                                                                ctx=Load())],
                                                        keywords=[]))],
                                            orelse=[
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='block_rlps', ctx=Load()),
                                                            slice=Name(id='reply_id', ctx=Load()),
                                                            ctx=Store())],
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='bytes', ctx=Load()),
                                                            attr='fromhex',
                                                            ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='result'),
                                                                    ctx=Load()),
                                                                slice=Slice(
                                                                    lower=Constant(value=2)),
                                                                ctx=Load())],
                                                        keywords=[]))])],
                                    orelse=[]),
                                If(
                                    test=Compare(
                                        left=Call(
                                            func=Name(id='len', ctx=Load()),
                                            args=[
                                                Name(id='block_rlps', ctx=Load())],
                                            keywords=[]),
                                        ops=[
                                            NotEq()],
                                        comparators=[
                                            Name(id='count', ctx=Load())]),
                                    body=[
                                        Raise(
                                            exc=Call(
                                                func=Name(id='Exception', ctx=Load()),
                                                args=[
                                                    JoinedStr(
                                                        values=[
                                                            Constant(value='expected '),
                                                            FormattedValue(
                                                                value=Name(id='count', ctx=Load()),
                                                                conversion=-1),
                                                            Constant(value=' blocks but only got '),
                                                            FormattedValue(
                                                                value=Call(
                                                                    func=Name(id='len', ctx=Load()),
                                                                    args=[
                                                                        Name(id='block_rlps', ctx=Load())],
                                                                    keywords=[]),
                                                                conversion=-1)])],
                                                keywords=[]))],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='info',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='blocks [%d, %d) fetched'),
                                            Name(id='first', ctx=Load()),
                                            BinOp(
                                                left=Name(id='first', ctx=Load()),
                                                op=Add(),
                                                right=Name(id='count', ctx=Load()))],
                                        keywords=[])),
                                AnnAssign(
                                    target=Name(id='blocks', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='List', ctx=Load()),
                                        slice=Subscript(
                                            value=Name(id='Union', ctx=Load()),
                                            slice=Tuple(
                                                elts=[
                                                    Name(id='RpcError', ctx=Load()),
                                                    Name(id='Any', ctx=Load())],
                                                ctx=Load()),
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=List(elts=[], ctx=Load()),
                                    simple=1),
                                For(
                                    target=Tuple(
                                        elts=[
                                            Name(id='_', ctx=Store()),
                                            Name(id='block_rlp', ctx=Store())],
                                        ctx=Store()),
                                    iter=Call(
                                        func=Name(id='sorted', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='block_rlps', ctx=Load()),
                                                    attr='items',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[])],
                                        keywords=[]),
                                    body=[
                                        If(
                                            test=Call(
                                                func=Name(id='isinstance', ctx=Load()),
                                                args=[
                                                    Name(id='block_rlp', ctx=Load()),
                                                    Name(id='RpcError', ctx=Load())],
                                                keywords=[]),
                                            body=[
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='blocks', ctx=Load()),
                                                            attr='append',
                                                            ctx=Load()),
                                                        args=[
                                                            Name(id='block_rlp', ctx=Load())],
                                                        keywords=[]))],
                                            orelse=[
                                                Assign(
                                                    targets=[
                                                        Name(id='decoded_block', ctx=Store())],
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='rlp', ctx=Load()),
                                                            attr='decode',
                                                            ctx=Load()),
                                                        args=[
                                                            Name(id='block_rlp', ctx=Load())],
                                                        keywords=[])),
                                                Assert(
                                                    test=UnaryOp(
                                                        op=Not(),
                                                        operand=Call(
                                                            func=Name(id='isinstance', ctx=Load()),
                                                            args=[
                                                                Name(id='decoded_block', ctx=Load()),
                                                                Name(id='bytes', ctx=Load())],
                                                            keywords=[]))),
                                                Assert(
                                                    test=UnaryOp(
                                                        op=Not(),
                                                        operand=Call(
                                                            func=Name(id='isinstance', ctx=Load()),
                                                            args=[
                                                                Subscript(
                                                                    value=Name(id='decoded_block', ctx=Load()),
                                                                    slice=Constant(value=0),
                                                                    ctx=Load()),
                                                                Name(id='bytes', ctx=Load())],
                                                            keywords=[]))),
                                                Assert(
                                                    test=Call(
                                                        func=Name(id='isinstance', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='decoded_block', ctx=Load()),
                                                                    slice=Constant(value=0),
                                                                    ctx=Load()),
                                                                slice=Constant(value=11),
                                                                ctx=Load()),
                                                            Name(id='bytes', ctx=Load())],
                                                        keywords=[])),
                                                Assign(
                                                    targets=[
                                                        Name(id='timestamp', ctx=Store())],
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='U256', ctx=Load()),
                                                            attr='from_be_bytes',
                                                            ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='decoded_block', ctx=Load()),
                                                                    slice=Constant(value=0),
                                                                    ctx=Load()),
                                                                slice=Constant(value=11),
                                                                ctx=Load())],
                                                        keywords=[])),
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='advance_block',
                                                            ctx=Load()),
                                                        args=[
                                                            Name(id='timestamp', ctx=Load())],
                                                        keywords=[])),
                                                Try(
                                                    body=[
                                                        Expr(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='blocks', ctx=Load()),
                                                                    attr='append',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Call(
                                                                        func=Attribute(
                                                                            value=Name(id='rlp', ctx=Load()),
                                                                            attr='decode_to',
                                                                            ctx=Load()),
                                                                        args=[
                                                                            Attribute(
                                                                                value=Call(
                                                                                    func=Attribute(
                                                                                        value=Name(id='self', ctx=Load()),
                                                                                        attr='module',
                                                                                        ctx=Load()),
                                                                                    args=[
                                                                                        Constant(value='blocks')],
                                                                                    keywords=[]),
                                                                                attr='Block',
                                                                                ctx=Load()),
                                                                            Name(id='block_rlp', ctx=Load())],
                                                                        keywords=[])],
                                                                keywords=[]))],
                                                    handlers=[
                                                        ExceptHandler(
                                                            type=Name(id='Exception', ctx=Load()),
                                                            body=[
                                                                Expr(
                                                                    value=Call(
                                                                        func=Attribute(
                                                                            value=Attribute(
                                                                                value=Name(id='self', ctx=Load()),
                                                                                attr='log',
                                                                                ctx=Load()),
                                                                            attr='exception',
                                                                            ctx=Load()),
                                                                        args=[
                                                                            Constant(value='failed to decode block %d with timestamp %d'),
                                                                            Attribute(
                                                                                value=Name(id='self', ctx=Load()),
                                                                                attr='block_number',
                                                                                ctx=Load()),
                                                                            Name(id='timestamp', ctx=Load())],
                                                                        keywords=[])),
                                                                Raise()])],
                                                    orelse=[],
                                                    finalbody=[])])],
                                    orelse=[]),
                                Return(
                                    value=Name(id='blocks', ctx=Load()))])],
                    decorator_list=[],
                    returns=Subscript(
                        value=Name(id='List', ctx=Load()),
                        slice=Subscript(
                            value=Name(id='Union', ctx=Load()),
                            slice=Tuple(
                                elts=[
                                    Name(id='bytes', ctx=Load()),
                                    Name(id='RpcError', ctx=Load())],
                                ctx=Load()),
                            ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='load_transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='t',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Turn a json transaction into a `Transaction`.\n        ')),
                        Assign(
                            targets=[
                                Name(id='access_list', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Name(id='sublist', ctx=Store()),
                            iter=Call(
                                func=Attribute(
                                    value=Name(id='t', ctx=Load()),
                                    attr='get',
                                    ctx=Load()),
                                args=[
                                    Constant(value='accessList'),
                                    List(elts=[], ctx=Load())],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='access_list', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Tuple(
                                                elts=[
                                                    Call(
                                                        func=Attribute(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='module',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value='utils.hexadecimal')],
                                                                keywords=[]),
                                                            attr='hex_to_address',
                                                            ctx=Load()),
                                                        args=[
                                                            Call(
                                                                func=Attribute(
                                                                    value=Name(id='sublist', ctx=Load()),
                                                                    attr='get',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value='address')],
                                                                keywords=[])],
                                                        keywords=[]),
                                                    ListComp(
                                                        elt=Call(
                                                            func=Name(id='hex_to_bytes32', ctx=Load()),
                                                            args=[
                                                                Name(id='key', ctx=Load())],
                                                            keywords=[]),
                                                        generators=[
                                                            comprehension(
                                                                target=Name(id='key', ctx=Store()),
                                                                iter=Call(
                                                                    func=Attribute(
                                                                        value=Name(id='sublist', ctx=Load()),
                                                                        attr='get',
                                                                        ctx=Load()),
                                                                    args=[
                                                                        Constant(value='storageKeys')],
                                                                    keywords=[]),
                                                                ifs=[],
                                                                is_async=0)])],
                                                ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        If(
                            test=Call(
                                func=Name(id='hasattr', ctx=Load()),
                                args=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='transactions')],
                                        keywords=[]),
                                    Constant(value='LegacyTransaction')],
                                keywords=[]),
                            body=[
                                If(
                                    test=Compare(
                                        left=Subscript(
                                            value=Name(id='t', ctx=Load()),
                                            slice=Constant(value='type'),
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Constant(value='0x1')]),
                                    body=[
                                        Return(
                                            value=BinOp(
                                                left=Constant(value=b'\x01'),
                                                op=Add(),
                                                right=Call(
                                                    func=Attribute(
                                                        value=Name(id='rlp', ctx=Load()),
                                                        attr='encode',
                                                        ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Attribute(
                                                                value=Call(
                                                                    func=Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='module',
                                                                        ctx=Load()),
                                                                    args=[
                                                                        Constant(value='transactions')],
                                                                    keywords=[]),
                                                                attr='AccessListTransaction',
                                                                ctx=Load()),
                                                            args=[
                                                                Call(
                                                                    func=Name(id='hex_to_u64', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='chainId'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='nonce'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='gasPrice'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='gas'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                IfExp(
                                                                    test=Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='to'),
                                                                        ctx=Load()),
                                                                    body=Call(
                                                                        func=Attribute(
                                                                            value=Call(
                                                                                func=Attribute(
                                                                                    value=Name(id='self', ctx=Load()),
                                                                                    attr='module',
                                                                                    ctx=Load()),
                                                                                args=[
                                                                                    Constant(value='utils.hexadecimal')],
                                                                                keywords=[]),
                                                                            attr='hex_to_address',
                                                                            ctx=Load()),
                                                                        args=[
                                                                            Subscript(
                                                                                value=Name(id='t', ctx=Load()),
                                                                                slice=Constant(value='to'),
                                                                                ctx=Load())],
                                                                        keywords=[]),
                                                                    orelse=Call(
                                                                        func=Name(id='Bytes0', ctx=Load()),
                                                                        args=[
                                                                            Constant(value=b'')],
                                                                        keywords=[])),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='value'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_bytes', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='input'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Name(id='access_list', ctx=Load()),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='v'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='r'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                Call(
                                                                    func=Name(id='hex_to_u256', ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='s'),
                                                                            ctx=Load())],
                                                                    keywords=[])],
                                                            keywords=[])],
                                                    keywords=[])))],
                                    orelse=[
                                        If(
                                            test=Compare(
                                                left=Subscript(
                                                    value=Name(id='t', ctx=Load()),
                                                    slice=Constant(value='type'),
                                                    ctx=Load()),
                                                ops=[
                                                    Eq()],
                                                comparators=[
                                                    Constant(value='0x2')]),
                                            body=[
                                                Return(
                                                    value=BinOp(
                                                        left=Constant(value=b'\x02'),
                                                        op=Add(),
                                                        right=Call(
                                                            func=Attribute(
                                                                value=Name(id='rlp', ctx=Load()),
                                                                attr='encode',
                                                                ctx=Load()),
                                                            args=[
                                                                Call(
                                                                    func=Attribute(
                                                                        value=Call(
                                                                            func=Attribute(
                                                                                value=Name(id='self', ctx=Load()),
                                                                                attr='module',
                                                                                ctx=Load()),
                                                                            args=[
                                                                                Constant(value='transactions')],
                                                                            keywords=[]),
                                                                        attr='FeeMarketTransaction',
                                                                        ctx=Load()),
                                                                    args=[
                                                                        Call(
                                                                            func=Name(id='hex_to_u64', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='chainId'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='nonce'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='maxPriorityFeePerGas'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='maxFeePerGas'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='gas'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        IfExp(
                                                                            test=Subscript(
                                                                                value=Name(id='t', ctx=Load()),
                                                                                slice=Constant(value='to'),
                                                                                ctx=Load()),
                                                                            body=Call(
                                                                                func=Attribute(
                                                                                    value=Call(
                                                                                        func=Attribute(
                                                                                            value=Name(id='self', ctx=Load()),
                                                                                            attr='module',
                                                                                            ctx=Load()),
                                                                                        args=[
                                                                                            Constant(value='utils.hexadecimal')],
                                                                                        keywords=[]),
                                                                                    attr='hex_to_address',
                                                                                    ctx=Load()),
                                                                                args=[
                                                                                    Subscript(
                                                                                        value=Name(id='t', ctx=Load()),
                                                                                        slice=Constant(value='to'),
                                                                                        ctx=Load())],
                                                                                keywords=[]),
                                                                            orelse=Call(
                                                                                func=Name(id='Bytes0', ctx=Load()),
                                                                                args=[
                                                                                    Constant(value=b'')],
                                                                                keywords=[])),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='value'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_bytes', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='input'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Name(id='access_list', ctx=Load()),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='v'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='r'),
                                                                                    ctx=Load())],
                                                                            keywords=[]),
                                                                        Call(
                                                                            func=Name(id='hex_to_u256', ctx=Load()),
                                                                            args=[
                                                                                Subscript(
                                                                                    value=Name(id='t', ctx=Load()),
                                                                                    slice=Constant(value='s'),
                                                                                    ctx=Load())],
                                                                            keywords=[])],
                                                                    keywords=[])],
                                                            keywords=[])))],
                                            orelse=[
                                                Return(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='module',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value='transactions')],
                                                                keywords=[]),
                                                            attr='LegacyTransaction',
                                                            ctx=Load()),
                                                        args=[
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='nonce'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='gasPrice'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='gas'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            IfExp(
                                                                test=Subscript(
                                                                    value=Name(id='t', ctx=Load()),
                                                                    slice=Constant(value='to'),
                                                                    ctx=Load()),
                                                                body=Call(
                                                                    func=Attribute(
                                                                        value=Call(
                                                                            func=Attribute(
                                                                                value=Name(id='self', ctx=Load()),
                                                                                attr='module',
                                                                                ctx=Load()),
                                                                            args=[
                                                                                Constant(value='utils.hexadecimal')],
                                                                            keywords=[]),
                                                                        attr='hex_to_address',
                                                                        ctx=Load()),
                                                                    args=[
                                                                        Subscript(
                                                                            value=Name(id='t', ctx=Load()),
                                                                            slice=Constant(value='to'),
                                                                            ctx=Load())],
                                                                    keywords=[]),
                                                                orelse=Call(
                                                                    func=Name(id='Bytes0', ctx=Load()),
                                                                    args=[
                                                                        Constant(value=b'')],
                                                                    keywords=[])),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='value'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_bytes', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='input'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='v'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='r'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='t', ctx=Load()),
                                                                        slice=Constant(value='s'),
                                                                        ctx=Load())],
                                                                keywords=[])],
                                                        keywords=[]))])])],
                            orelse=[
                                Return(
                                    value=Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='transactions')],
                                                keywords=[]),
                                            attr='Transaction',
                                            ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='nonce'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='gasPrice'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='gas'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            IfExp(
                                                test=Subscript(
                                                    value=Name(id='t', ctx=Load()),
                                                    slice=Constant(value='to'),
                                                    ctx=Load()),
                                                body=Call(
                                                    func=Attribute(
                                                        value=Call(
                                                            func=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='module',
                                                                ctx=Load()),
                                                            args=[
                                                                Constant(value='utils.hexadecimal')],
                                                            keywords=[]),
                                                        attr='hex_to_address',
                                                        ctx=Load()),
                                                    args=[
                                                        Subscript(
                                                            value=Name(id='t', ctx=Load()),
                                                            slice=Constant(value='to'),
                                                            ctx=Load())],
                                                    keywords=[]),
                                                orelse=Call(
                                                    func=Name(id='Bytes0', ctx=Load()),
                                                    args=[
                                                        Constant(value=b'')],
                                                    keywords=[])),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='value'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_bytes', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='input'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='v'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='r'),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='t', ctx=Load()),
                                                        slice=Constant(value='s'),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))])],
                    decorator_list=[],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='fetch_blocks_eth',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='first',
                                annotation=Name(id='Uint', ctx=Load())),
                            arg(
                                arg='count',
                                annotation=Name(id='Uint', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the block specified by the given number from the RPC provider\n        using only standard endpoints.\n        ')),
                        If(
                            test=Compare(
                                left=Name(id='count', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                Return(
                                    value=List(elts=[], ctx=Load()))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='calls', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Name(id='number', ctx=Store()),
                            iter=Call(
                                func=Name(id='range', ctx=Load()),
                                args=[
                                    Name(id='first', ctx=Load()),
                                    BinOp(
                                        left=Name(id='first', ctx=Load()),
                                        op=Add(),
                                        right=Name(id='count', ctx=Load()))],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='calls', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Dict(
                                                keys=[
                                                    Constant(value='jsonrpc'),
                                                    Constant(value='id'),
                                                    Constant(value='method'),
                                                    Constant(value='params')],
                                                values=[
                                                    Constant(value='2.0'),
                                                    Call(
                                                        func=Name(id='hex', ctx=Load()),
                                                        args=[
                                                            Name(id='number', ctx=Load())],
                                                        keywords=[]),
                                                    Constant(value='eth_getBlockByNumber'),
                                                    List(
                                                        elts=[
                                                            Call(
                                                                func=Name(id='hex', ctx=Load()),
                                                                args=[
                                                                    Name(id='number', ctx=Load())],
                                                                keywords=[]),
                                                            Constant(value=True)],
                                                        ctx=Load())])],
                                        keywords=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='data', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='dumps',
                                            ctx=Load()),
                                        args=[
                                            Name(id='calls', ctx=Load())],
                                        keywords=[]),
                                    attr='encode',
                                    ctx=Load()),
                                args=[
                                    Constant(value='utf-8')],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='debug',
                                    ctx=Load()),
                                args=[
                                    Constant(value='fetching blocks [%d, %d)...'),
                                    Name(id='first', ctx=Load()),
                                    BinOp(
                                        left=Name(id='first', ctx=Load()),
                                        op=Add(),
                                        right=Name(id='count', ctx=Load()))],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='post', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='request', ctx=Load()),
                                    attr='Request',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='rpc_url',
                                        ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='data',
                                        value=Name(id='data', ctx=Load())),
                                    keyword(
                                        arg='headers',
                                        value=Dict(
                                            keys=[
                                                Constant(value='Content-Length'),
                                                Constant(value='Content-Type'),
                                                Constant(value='User-Agent')],
                                            values=[
                                                Call(
                                                    func=Name(id='str', ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Name(id='len', ctx=Load()),
                                                            args=[
                                                                Name(id='data', ctx=Load())],
                                                            keywords=[])],
                                                    keywords=[]),
                                                Constant(value='application/json'),
                                                Constant(value='ethereum-spec-sync')]))])),
                        With(
                            items=[
                                withitem(
                                    context_expr=Call(
                                        func=Attribute(
                                            value=Name(id='request', ctx=Load()),
                                            attr='urlopen',
                                            ctx=Load()),
                                        args=[
                                            Name(id='post', ctx=Load())],
                                        keywords=[]),
                                    optional_vars=Name(id='response', ctx=Store()))],
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='replies', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='load',
                                            ctx=Load()),
                                        args=[
                                            Name(id='response', ctx=Load())],
                                        keywords=[])),
                                AnnAssign(
                                    target=Name(id='block_jsons', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='Dict', ctx=Load()),
                                        slice=Tuple(
                                            elts=[
                                                Name(id='Uint', ctx=Load()),
                                                Name(id='Any', ctx=Load())],
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=Dict(keys=[], values=[]),
                                    simple=1),
                                AnnAssign(
                                    target=Name(id='ommers_needed', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='Dict', ctx=Load()),
                                        slice=Tuple(
                                            elts=[
                                                Name(id='Uint', ctx=Load()),
                                                Name(id='int', ctx=Load())],
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=Dict(keys=[], values=[]),
                                    simple=1),
                                AnnAssign(
                                    target=Name(id='blocks', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='Dict', ctx=Load()),
                                        slice=Tuple(
                                            elts=[
                                                Name(id='Uint', ctx=Load()),
                                                Subscript(
                                                    value=Name(id='Union', ctx=Load()),
                                                    slice=Tuple(
                                                        elts=[
                                                            Name(id='Any', ctx=Load()),
                                                            Name(id='RpcError', ctx=Load())],
                                                        ctx=Load()),
                                                    ctx=Load())],
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=Dict(keys=[], values=[]),
                                    simple=1),
                                For(
                                    target=Name(id='reply', ctx=Store()),
                                    iter=Name(id='replies', ctx=Load()),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='reply_id', ctx=Store())],
                                            value=Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='int', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Name(id='reply', ctx=Load()),
                                                                slice=Constant(value='id'),
                                                                ctx=Load()),
                                                            Constant(value=0)],
                                                        keywords=[])],
                                                keywords=[])),
                                        If(
                                            test=BoolOp(
                                                op=Or(),
                                                values=[
                                                    Compare(
                                                        left=Name(id='reply_id', ctx=Load()),
                                                        ops=[
                                                            Lt()],
                                                        comparators=[
                                                            Name(id='first', ctx=Load())]),
                                                    Compare(
                                                        left=Name(id='reply_id', ctx=Load()),
                                                        ops=[
                                                            GtE()],
                                                        comparators=[
                                                            BinOp(
                                                                left=Name(id='first', ctx=Load()),
                                                                op=Add(),
                                                                right=Name(id='count', ctx=Load()))])]),
                                            body=[
                                                Raise(
                                                    exc=Call(
                                                        func=Name(id='Exception', ctx=Load()),
                                                        args=[
                                                            Constant(value='mismatched request id')],
                                                        keywords=[]))],
                                            orelse=[]),
                                        If(
                                            test=Compare(
                                                left=Constant(value='error'),
                                                ops=[
                                                    In()],
                                                comparators=[
                                                    Name(id='reply', ctx=Load())]),
                                            body=[
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='blocks', ctx=Load()),
                                                            slice=Name(id='reply_id', ctx=Load()),
                                                            ctx=Store())],
                                                    value=Call(
                                                        func=Name(id='RpcError', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='code'),
                                                                ctx=Load()),
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='message'),
                                                                ctx=Load())],
                                                        keywords=[]))],
                                            orelse=[
                                                Assign(
                                                    targets=[
                                                        Name(id='res', ctx=Store())],
                                                    value=Subscript(
                                                        value=Name(id='reply', ctx=Load()),
                                                        slice=Constant(value='result'),
                                                        ctx=Load())),
                                                If(
                                                    test=Compare(
                                                        left=Name(id='res', ctx=Load()),
                                                        ops=[
                                                            Is()],
                                                        comparators=[
                                                            Constant(value=None)]),
                                                    body=[
                                                        ImportFrom(
                                                            module='time',
                                                            names=[
                                                                alias(name='sleep')],
                                                            level=0),
                                                        Expr(
                                                            value=Call(
                                                                func=Name(id='sleep', ctx=Load()),
                                                                args=[
                                                                    Constant(value=12)],
                                                                keywords=[])),
                                                        Break()],
                                                    orelse=[]),
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='block_jsons', ctx=Load()),
                                                            slice=Name(id='reply_id', ctx=Load()),
                                                            ctx=Store())],
                                                    value=Name(id='res', ctx=Load())),
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='ommers_needed', ctx=Load()),
                                                            slice=Name(id='reply_id', ctx=Load()),
                                                            ctx=Store())],
                                                    value=Call(
                                                        func=Name(id='len', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Name(id='res', ctx=Load()),
                                                                slice=Constant(value='uncles'),
                                                                ctx=Load())],
                                                        keywords=[]))])],
                                    orelse=[]),
                                Assign(
                                    targets=[
                                        Name(id='ommers', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='fetch_ommers',
                                            ctx=Load()),
                                        args=[
                                            Name(id='ommers_needed', ctx=Load())],
                                        keywords=[])),
                                For(
                                    target=Name(id='id', ctx=Store()),
                                    iter=Name(id='block_jsons', ctx=Load()),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='advance_block',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='hex_to_u256', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='block_jsons', ctx=Load()),
                                                                    slice=Name(id='id', ctx=Load()),
                                                                    ctx=Load()),
                                                                slice=Constant(value='timestamp'),
                                                                ctx=Load())],
                                                        keywords=[])],
                                                keywords=[])),
                                        Assign(
                                            targets=[
                                                Subscript(
                                                    value=Name(id='blocks', ctx=Load()),
                                                    slice=Name(id='id', ctx=Load()),
                                                    ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='make_block',
                                                    ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='block_jsons', ctx=Load()),
                                                        slice=Name(id='id', ctx=Load()),
                                                        ctx=Load()),
                                                    Call(
                                                        func=Attribute(
                                                            value=Name(id='ommers', ctx=Load()),
                                                            attr='get',
                                                            ctx=Load()),
                                                        args=[
                                                            Name(id='id', ctx=Load()),
                                                            Tuple(elts=[], ctx=Load())],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='info',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='blocks [%d, %d) fetched'),
                                            Name(id='first', ctx=Load()),
                                            BinOp(
                                                left=Name(id='first', ctx=Load()),
                                                op=Add(),
                                                right=Name(id='count', ctx=Load()))],
                                        keywords=[])),
                                Return(
                                    value=ListComp(
                                        elt=Name(id='v', ctx=Load()),
                                        generators=[
                                            comprehension(
                                                target=Tuple(
                                                    elts=[
                                                        Name(id='_', ctx=Store()),
                                                        Name(id='v', ctx=Store())],
                                                    ctx=Store()),
                                                iter=Call(
                                                    func=Name(id='sorted', ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Attribute(
                                                                value=Name(id='blocks', ctx=Load()),
                                                                attr='items',
                                                                ctx=Load()),
                                                            args=[],
                                                            keywords=[])],
                                                    keywords=[]),
                                                ifs=[],
                                                is_async=0)]))])],
                    decorator_list=[],
                    returns=Subscript(
                        value=Name(id='List', ctx=Load()),
                        slice=Subscript(
                            value=Name(id='Union', ctx=Load()),
                            slice=Tuple(
                                elts=[
                                    Name(id='Any', ctx=Load()),
                                    Name(id='RpcError', ctx=Load())],
                                ctx=Load()),
                            ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='fetch_ommers',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='ommers_needed',
                                annotation=Subscript(
                                    value=Name(id='Dict', ctx=Load()),
                                    slice=Tuple(
                                        elts=[
                                            Name(id='Uint', ctx=Load()),
                                            Name(id='int', ctx=Load())],
                                        ctx=Load()),
                                    ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the ommers for a given block from the RPC provider.\n        ')),
                        Assign(
                            targets=[
                                Name(id='calls', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Tuple(
                                elts=[
                                    Name(id='block_number', ctx=Store()),
                                    Name(id='num_ommers', ctx=Store())],
                                ctx=Store()),
                            iter=Call(
                                func=Attribute(
                                    value=Name(id='ommers_needed', ctx=Load()),
                                    attr='items',
                                    ctx=Load()),
                                args=[],
                                keywords=[]),
                            body=[
                                For(
                                    target=Name(id='i', ctx=Store()),
                                    iter=Call(
                                        func=Name(id='range', ctx=Load()),
                                        args=[
                                            Name(id='num_ommers', ctx=Load())],
                                        keywords=[]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='calls', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Dict(
                                                        keys=[
                                                            Constant(value='jsonrpc'),
                                                            Constant(value='id'),
                                                            Constant(value='method'),
                                                            Constant(value='params')],
                                                        values=[
                                                            Constant(value='2.0'),
                                                            Call(
                                                                func=Name(id='hex', ctx=Load()),
                                                                args=[
                                                                    BinOp(
                                                                        left=BinOp(
                                                                            left=Name(id='block_number', ctx=Load()),
                                                                            op=Mult(),
                                                                            right=Call(
                                                                                func=Name(id='Uint', ctx=Load()),
                                                                                args=[
                                                                                    Constant(value=20)],
                                                                                keywords=[])),
                                                                        op=Add(),
                                                                        right=Call(
                                                                            func=Name(id='Uint', ctx=Load()),
                                                                            args=[
                                                                                Name(id='i', ctx=Load())],
                                                                            keywords=[]))],
                                                                keywords=[]),
                                                            Constant(value='eth_getUncleByBlockNumberAndIndex'),
                                                            List(
                                                                elts=[
                                                                    Call(
                                                                        func=Name(id='hex', ctx=Load()),
                                                                        args=[
                                                                            Name(id='block_number', ctx=Load())],
                                                                        keywords=[]),
                                                                    Call(
                                                                        func=Name(id='hex', ctx=Load()),
                                                                        args=[
                                                                            Name(id='i', ctx=Load())],
                                                                        keywords=[])],
                                                                ctx=Load())])],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Name(id='calls', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    List(elts=[], ctx=Load())]),
                            body=[
                                Return(
                                    value=Dict(keys=[], values=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='data', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='dumps',
                                            ctx=Load()),
                                        args=[
                                            Name(id='calls', ctx=Load())],
                                        keywords=[]),
                                    attr='encode',
                                    ctx=Load()),
                                args=[
                                    Constant(value='utf-8')],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='debug',
                                    ctx=Load()),
                                args=[
                                    Constant(value='fetching ommers [%d, %d]...'),
                                    Call(
                                        func=Name(id='min', ctx=Load()),
                                        args=[
                                            Name(id='ommers_needed', ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='max', ctx=Load()),
                                        args=[
                                            Name(id='ommers_needed', ctx=Load())],
                                        keywords=[])],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='post', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='request', ctx=Load()),
                                    attr='Request',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='rpc_url',
                                        ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='data',
                                        value=Name(id='data', ctx=Load())),
                                    keyword(
                                        arg='headers',
                                        value=Dict(
                                            keys=[
                                                Constant(value='Content-Length'),
                                                Constant(value='Content-Type'),
                                                Constant(value='User-Agent')],
                                            values=[
                                                Call(
                                                    func=Name(id='str', ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Name(id='len', ctx=Load()),
                                                            args=[
                                                                Name(id='data', ctx=Load())],
                                                            keywords=[])],
                                                    keywords=[]),
                                                Constant(value='application/json'),
                                                Constant(value='ethereum-spec-sync')]))])),
                        With(
                            items=[
                                withitem(
                                    context_expr=Call(
                                        func=Attribute(
                                            value=Name(id='request', ctx=Load()),
                                            attr='urlopen',
                                            ctx=Load()),
                                        args=[
                                            Name(id='post', ctx=Load())],
                                        keywords=[]),
                                    optional_vars=Name(id='response', ctx=Store()))],
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='replies', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='load',
                                            ctx=Load()),
                                        args=[
                                            Name(id='response', ctx=Load())],
                                        keywords=[])),
                                AnnAssign(
                                    target=Name(id='ommers', ctx=Store()),
                                    annotation=Subscript(
                                        value=Name(id='Dict', ctx=Load()),
                                        slice=Tuple(
                                            elts=[
                                                Name(id='Uint', ctx=Load()),
                                                Subscript(
                                                    value=Name(id='Dict', ctx=Load()),
                                                    slice=Tuple(
                                                        elts=[
                                                            Name(id='Uint', ctx=Load()),
                                                            Name(id='Any', ctx=Load())],
                                                        ctx=Load()),
                                                    ctx=Load())],
                                            ctx=Load()),
                                        ctx=Load()),
                                    value=Dict(keys=[], values=[]),
                                    simple=1),
                                Assign(
                                    targets=[
                                        Name(id='twenty', ctx=Store())],
                                    value=Call(
                                        func=Name(id='Uint', ctx=Load()),
                                        args=[
                                            Constant(value=20)],
                                        keywords=[])),
                                For(
                                    target=Name(id='reply', ctx=Store()),
                                    iter=Name(id='replies', ctx=Load()),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='reply_id', ctx=Store())],
                                            value=Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='int', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Name(id='reply', ctx=Load()),
                                                                slice=Constant(value='id'),
                                                                ctx=Load()),
                                                            Constant(value=0)],
                                                        keywords=[])],
                                                keywords=[])),
                                        If(
                                            test=Compare(
                                                left=BinOp(
                                                    left=Name(id='reply_id', ctx=Load()),
                                                    op=FloorDiv(),
                                                    right=Name(id='twenty', ctx=Load())),
                                                ops=[
                                                    NotIn()],
                                                comparators=[
                                                    Name(id='ommers', ctx=Load())]),
                                            body=[
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Name(id='ommers', ctx=Load()),
                                                            slice=BinOp(
                                                                left=Name(id='reply_id', ctx=Load()),
                                                                op=FloorDiv(),
                                                                right=Name(id='twenty', ctx=Load())),
                                                            ctx=Store())],
                                                    value=Dict(keys=[], values=[]))],
                                            orelse=[]),
                                        If(
                                            test=Compare(
                                                left=Constant(value='error'),
                                                ops=[
                                                    In()],
                                                comparators=[
                                                    Name(id='reply', ctx=Load())]),
                                            body=[
                                                Raise(
                                                    exc=Call(
                                                        func=Name(id='RpcError', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='code'),
                                                                ctx=Load()),
                                                            Subscript(
                                                                value=Subscript(
                                                                    value=Name(id='reply', ctx=Load()),
                                                                    slice=Constant(value='error'),
                                                                    ctx=Load()),
                                                                slice=Constant(value='message'),
                                                                ctx=Load())],
                                                        keywords=[]))],
                                            orelse=[
                                                Assign(
                                                    targets=[
                                                        Subscript(
                                                            value=Subscript(
                                                                value=Name(id='ommers', ctx=Load()),
                                                                slice=BinOp(
                                                                    left=Name(id='reply_id', ctx=Load()),
                                                                    op=FloorDiv(),
                                                                    right=Name(id='twenty', ctx=Load())),
                                                                ctx=Load()),
                                                            slice=BinOp(
                                                                left=Name(id='reply_id', ctx=Load()),
                                                                op=Mod(),
                                                                right=Name(id='twenty', ctx=Load())),
                                                            ctx=Store())],
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='make_header',
                                                            ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Name(id='reply', ctx=Load()),
                                                                slice=Constant(value='result'),
                                                                ctx=Load())],
                                                        keywords=[]))])],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='info',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='ommers [%d, %d] fetched'),
                                            Call(
                                                func=Name(id='min', ctx=Load()),
                                                args=[
                                                    Name(id='ommers_needed', ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='max', ctx=Load()),
                                                args=[
                                                    Name(id='ommers_needed', ctx=Load())],
                                                keywords=[])],
                                        keywords=[])),
                                Return(
                                    value=DictComp(
                                        key=Name(id='k', ctx=Load()),
                                        value=Call(
                                            func=Name(id='tuple', ctx=Load()),
                                            args=[
                                                GeneratorExp(
                                                    elt=Name(id='x', ctx=Load()),
                                                    generators=[
                                                        comprehension(
                                                            target=Tuple(
                                                                elts=[
                                                                    Name(id='_', ctx=Store()),
                                                                    Name(id='x', ctx=Store())],
                                                                ctx=Store()),
                                                            iter=Call(
                                                                func=Name(id='sorted', ctx=Load()),
                                                                args=[
                                                                    Call(
                                                                        func=Attribute(
                                                                            value=Name(id='v', ctx=Load()),
                                                                            attr='items',
                                                                            ctx=Load()),
                                                                        args=[],
                                                                        keywords=[])],
                                                                keywords=[]),
                                                            ifs=[],
                                                            is_async=0)])],
                                            keywords=[]),
                                        generators=[
                                            comprehension(
                                                target=Tuple(
                                                    elts=[
                                                        Name(id='k', ctx=Store()),
                                                        Name(id='v', ctx=Store())],
                                                    ctx=Store()),
                                                iter=Call(
                                                    func=Attribute(
                                                        value=Name(id='ommers', ctx=Load()),
                                                        attr='items',
                                                        ctx=Load()),
                                                    args=[],
                                                    keywords=[]),
                                                ifs=[],
                                                is_async=0)]))])],
                    decorator_list=[],
                    returns=Subscript(
                        value=Name(id='Dict', ctx=Load()),
                        slice=Tuple(
                            elts=[
                                Name(id='Uint', ctx=Load()),
                                Name(id='Any', ctx=Load())],
                            ctx=Load()),
                        ctx=Load())),
                FunctionDef(
                    name='make_header',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='json',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Create a Header object from JSON describing it.\n        ')),
                        Assign(
                            targets=[
                                Name(id='fields', ctx=Store())],
                            value=List(
                                elts=[
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='parentHash'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='sha3Uncles'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='utils.hexadecimal')],
                                                keywords=[]),
                                            attr='hex_to_address',
                                            ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='miner'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='stateRoot'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='transactionsRoot'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='receiptsRoot'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='Bytes256', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='hex_to_bytes', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='json', ctx=Load()),
                                                        slice=Constant(value='logsBloom'),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_uint', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='difficulty'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_uint', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='number'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_uint', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='gasLimit'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_uint', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='gasUsed'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_u256', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='timestamp'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='extraData'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes32', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='mixHash'),
                                                ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='hex_to_bytes8', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='json', ctx=Load()),
                                                slice=Constant(value='nonce'),
                                                ctx=Load())],
                                        keywords=[])],
                                ctx=Load())),
                        If(
                            test=Call(
                                func=Name(id='hasattr', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='module',
                                                ctx=Load()),
                                            args=[
                                                Constant(value='blocks')],
                                            keywords=[]),
                                        attr='Header',
                                        ctx=Load()),
                                    Constant(value='base_fee_per_gas')],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='fields', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='hex_to_uint', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='json', ctx=Load()),
                                                        slice=Constant(value='baseFeePerGas'),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[]),
                        If(
                            test=Call(
                                func=Name(id='hasattr', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='module',
                                                ctx=Load()),
                                            args=[
                                                Constant(value='blocks')],
                                            keywords=[]),
                                        attr='Header',
                                        ctx=Load()),
                                    Constant(value='withdrawals_root')],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='fields', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='hex_to_bytes32', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='json', ctx=Load()),
                                                        slice=Constant(value='withdrawalsRoot'),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='blocks')],
                                        keywords=[]),
                                    attr='Header',
                                    ctx=Load()),
                                args=[
                                    Starred(
                                        value=Name(id='fields', ctx=Load()),
                                        ctx=Load())],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='make_block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='json',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='ommers',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Create a block from JSON describing it.\n        ')),
                        Assign(
                            targets=[
                                Name(id='header', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='make_header',
                                    ctx=Load()),
                                args=[
                                    Name(id='json', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='transactions', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Name(id='t', ctx=Store()),
                            iter=Subscript(
                                value=Name(id='json', ctx=Load()),
                                slice=Constant(value='transactions'),
                                ctx=Load()),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='transactions', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='load_transaction',
                                                    ctx=Load()),
                                                args=[
                                                    Name(id='t', ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Call(
                                    func=Attribute(
                                        value=Name(id='json', ctx=Load()),
                                        attr='get',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='withdrawals')],
                                    keywords=[]),
                                ops=[
                                    IsNot()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='withdrawals', ctx=Store())],
                                    value=List(elts=[], ctx=Load())),
                                For(
                                    target=Name(id='j', ctx=Store()),
                                    iter=Subscript(
                                        value=Name(id='json', ctx=Load()),
                                        slice=Constant(value='withdrawals'),
                                        ctx=Load()),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='withdrawals', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Attribute(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='module',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value='blocks')],
                                                                keywords=[]),
                                                            attr='Withdrawal',
                                                            ctx=Load()),
                                                        args=[
                                                            Call(
                                                                func=Name(id='hex_to_u64', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='j', ctx=Load()),
                                                                        slice=Constant(value='index'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u64', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='j', ctx=Load()),
                                                                        slice=Constant(value='validatorIndex'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Attribute(
                                                                    value=Call(
                                                                        func=Attribute(
                                                                            value=Name(id='self', ctx=Load()),
                                                                            attr='module',
                                                                            ctx=Load()),
                                                                        args=[
                                                                            Constant(value='utils.hexadecimal')],
                                                                        keywords=[]),
                                                                    attr='hex_to_address',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='j', ctx=Load()),
                                                                        slice=Constant(value='address'),
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            Call(
                                                                func=Name(id='hex_to_u256', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='j', ctx=Load()),
                                                                        slice=Constant(value='amount'),
                                                                        ctx=Load())],
                                                                keywords=[])],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='extra_fields', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        If(
                            test=Call(
                                func=Name(id='hasattr', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='module',
                                                ctx=Load()),
                                            args=[
                                                Constant(value='blocks')],
                                            keywords=[]),
                                        attr='Block',
                                        ctx=Load()),
                                    Constant(value='withdrawals')],
                                keywords=[]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='extra_fields', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Name(id='withdrawals', ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='blocks')],
                                        keywords=[]),
                                    attr='Block',
                                    ctx=Load()),
                                args=[
                                    Name(id='header', ctx=Load()),
                                    Call(
                                        func=Name(id='tuple', ctx=Load()),
                                        args=[
                                            Name(id='transactions', ctx=Load())],
                                        keywords=[]),
                                    Name(id='ommers', ctx=Load()),
                                    Starred(
                                        value=Name(id='extra_fields', ctx=Load()),
                                        ctx=Load())],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='download_chain_id',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the chain id of the executing chain from the rpc provider.\n        ')),
                        Assign(
                            targets=[
                                Name(id='call', ctx=Store())],
                            value=List(
                                elts=[
                                    Dict(
                                        keys=[
                                            Constant(value='jsonrpc'),
                                            Constant(value='id'),
                                            Constant(value='method'),
                                            Constant(value='params')],
                                        values=[
                                            Constant(value='2.0'),
                                            Call(
                                                func=Name(id='hex', ctx=Load()),
                                                args=[
                                                    Constant(value=2)],
                                                keywords=[]),
                                            Constant(value='eth_chainId'),
                                            List(elts=[], ctx=Load())])],
                                ctx=Load())),
                        Assign(
                            targets=[
                                Name(id='data', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='dumps',
                                            ctx=Load()),
                                        args=[
                                            Name(id='call', ctx=Load())],
                                        keywords=[]),
                                    attr='encode',
                                    ctx=Load()),
                                args=[
                                    Constant(value='utf-8')],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='post', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='request', ctx=Load()),
                                    attr='Request',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='rpc_url',
                                        ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='data',
                                        value=Name(id='data', ctx=Load())),
                                    keyword(
                                        arg='headers',
                                        value=Dict(
                                            keys=[
                                                Constant(value='Content-Length'),
                                                Constant(value='Content-Type'),
                                                Constant(value='User-Agent')],
                                            values=[
                                                Call(
                                                    func=Name(id='str', ctx=Load()),
                                                    args=[
                                                        Call(
                                                            func=Name(id='len', ctx=Load()),
                                                            args=[
                                                                Name(id='data', ctx=Load())],
                                                            keywords=[])],
                                                    keywords=[]),
                                                Constant(value='application/json'),
                                                Constant(value='ethereum-spec-sync')]))])),
                        With(
                            items=[
                                withitem(
                                    context_expr=Call(
                                        func=Attribute(
                                            value=Name(id='request', ctx=Load()),
                                            attr='urlopen',
                                            ctx=Load()),
                                        args=[
                                            Name(id='post', ctx=Load())],
                                        keywords=[]),
                                    optional_vars=Name(id='response', ctx=Store()))],
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='reply', ctx=Store())],
                                    value=Subscript(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='json', ctx=Load()),
                                                attr='load',
                                                ctx=Load()),
                                            args=[
                                                Name(id='response', ctx=Load())],
                                            keywords=[]),
                                        slice=Constant(value=0),
                                        ctx=Load())),
                                Assert(
                                    test=Compare(
                                        left=Subscript(
                                            value=Name(id='reply', ctx=Load()),
                                            slice=Constant(value='id'),
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Call(
                                                func=Name(id='hex', ctx=Load()),
                                                args=[
                                                    Constant(value=2)],
                                                keywords=[])])),
                                Assign(
                                    targets=[
                                        Name(id='chain_id', ctx=Store())],
                                    value=Call(
                                        func=Name(id='U64', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='reply', ctx=Load()),
                                                        slice=Constant(value='result'),
                                                        ctx=Load()),
                                                    Constant(value=16)],
                                                keywords=[])],
                                        keywords=[]))]),
                        Return(
                            value=Name(id='chain_id', ctx=Load()))],
                    decorator_list=[],
                    returns=Name(id='U64', ctx=Load()))],
            decorator_list=[]),
        ClassDef(
            name='Sync',
            bases=[
                Name(id='ForkTracking', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    A command line tool to fetch blocks from an RPC provider and validate them\n    against the specification.\n    ')),
                FunctionDef(
                    name='parse_arguments',
                    args=arguments(
                        posonlyargs=[],
                        args=[],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Parse command line arguments.\n        ')),
                        Assign(
                            targets=[
                                Name(id='parser', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='argparse', ctx=Load()),
                                    attr='ArgumentParser',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--rpc-url')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='endpoint providing the Ethereum RPC API')),
                                    keyword(
                                        arg='default',
                                        value=Constant(value='http://localhost:8545/'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--unoptimized')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value="don't use the optimized state/ethash (extremely slow)")),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_true'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--persist')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='store the state in a db in this file'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--geth')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='use geth specific RPC endpoints while fetching blocks')),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_true'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--reset')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='delete the db and start from scratch')),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_true'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--gas-per-commit')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='commit to db each time this much gas is consumed')),
                                    keyword(
                                        arg='type',
                                        value=Name(id='int', ctx=Load())),
                                    keyword(
                                        arg='default',
                                        value=Constant(value=1000000000))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--initial-state')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='start from the state in this db, rather than genesis'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--stop-at')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='after syncing this block, exit successfully')),
                                    keyword(
                                        arg='type',
                                        value=Name(id='int', ctx=Load()))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--mainnet')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='Set the chain to mainnet')),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_const')),
                                    keyword(
                                        arg='dest',
                                        value=Constant(value='chain')),
                                    keyword(
                                        arg='const',
                                        value=Constant(value='mainnet')),
                                    keyword(
                                        arg='default',
                                        value=Constant(value='mainnet'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--zhejiang')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='Set the chain to mainnet')),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_const')),
                                    keyword(
                                        arg='dest',
                                        value=Constant(value='chain')),
                                    keyword(
                                        arg='const',
                                        value=Constant(value='zhejiang'))])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='add_argument',
                                    ctx=Load()),
                                args=[
                                    Constant(value='--sepolia')],
                                keywords=[
                                    keyword(
                                        arg='help',
                                        value=Constant(value='Set the chain to mainnet')),
                                    keyword(
                                        arg='action',
                                        value=Constant(value='store_const')),
                                    keyword(
                                        arg='dest',
                                        value=Constant(value='chain')),
                                    keyword(
                                        arg='const',
                                        value=Constant(value='sepolia'))])),
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='parser', ctx=Load()),
                                    attr='parse_args',
                                    ctx=Load()),
                                args=[],
                                keywords=[]))],
                    decorator_list=[
                        Name(id='staticmethod', ctx=Load())],
                    returns=Attribute(
                        value=Name(id='argparse', ctx=Load()),
                        attr='Namespace',
                        ctx=Load())),
                AnnAssign(
                    target=Name(id='downloader', ctx=Store()),
                    annotation=Name(id='BlockDownloader', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='options', ctx=Store()),
                    annotation=Attribute(
                        value=Name(id='argparse', ctx=Load()),
                        attr='Namespace',
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='chain', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='log', ctx=Store()),
                    annotation=Attribute(
                        value=Name(id='logging', ctx=Load()),
                        attr='Logger',
                        ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='log',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='logging', ctx=Load()),
                                    attr='getLogger',
                                    ctx=Load()),
                                args=[
                                    Name(id='__name__', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='options',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parse_arguments',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        If(
                            test=UnaryOp(
                                op=Not(),
                                operand=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='unoptimized',
                                    ctx=Load())),
                            body=[
                                Import(
                                    names=[
                                        alias(name='ethereum_optimized')]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='ethereum_optimized', ctx=Load()),
                                            attr='monkey_patch',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                arg='state_path',
                                                value=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='options',
                                                        ctx=Load()),
                                                    attr='persist',
                                                    ctx=Load()))]))],
                            orelse=[
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='persist',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='--persist is not supported with --unoptimized')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Name(id='exit', ctx=Load()),
                                                args=[
                                                    Constant(value=1)],
                                                keywords=[]))],
                                    orelse=[]),
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='initial_state',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='--initial-state is not supported with --unoptimized')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Name(id='exit', ctx=Load()),
                                                args=[
                                                    Constant(value=1)],
                                                keywords=[]))],
                                    orelse=[]),
                                If(
                                    test=Attribute(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='options',
                                            ctx=Load()),
                                        attr='reset',
                                        ctx=Load()),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='--reset is not supported with --unoptimized')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Name(id='exit', ctx=Load()),
                                                args=[
                                                    Constant(value=1)],
                                                keywords=[]))],
                                    orelse=[])]),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='persist',
                                    ctx=Load()),
                                ops=[
                                    Is()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='initial_state',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='--initial_state is not supported without --persist')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Name(id='exit', ctx=Load()),
                                                args=[
                                                    Constant(value=1)],
                                                keywords=[]))],
                                    orelse=[]),
                                If(
                                    test=Attribute(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='options',
                                            ctx=Load()),
                                        attr='reset',
                                        ctx=Load()),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='--reset is not supported without --persist')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Name(id='exit', ctx=Load()),
                                                args=[
                                                    Constant(value=1)],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='config_str', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='cast', ctx=Load()),
                                        args=[
                                            Name(id='bytes', ctx=Load()),
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='pkgutil', ctx=Load()),
                                                    attr='get_data',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='ethereum'),
                                                    JoinedStr(
                                                        values=[
                                                            Constant(value='assets/'),
                                                            FormattedValue(
                                                                value=Attribute(
                                                                    value=Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='options',
                                                                        ctx=Load()),
                                                                    attr='chain',
                                                                    ctx=Load()),
                                                                conversion=-1),
                                                            Constant(value='.json')])],
                                                keywords=[])],
                                        keywords=[]),
                                    attr='decode',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='config', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='json', ctx=Load()),
                                    attr='loads',
                                    ctx=Load()),
                                args=[
                                    Name(id='config_str', ctx=Load())],
                                keywords=[])),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='chain',
                                    ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value='mainnet')]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='forks', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='Hardfork', ctx=Load()),
                                            attr='discover',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[]))],
                            orelse=[
                                Assign(
                                    targets=[
                                        Name(id='forks', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='Hardfork', ctx=Load()),
                                            attr='load_from_json',
                                            ctx=Load()),
                                        args=[
                                            Name(id='config', ctx=Load())],
                                        keywords=[]))]),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='ForkTracking', ctx=Load()),
                                    attr='__init__',
                                    ctx=Load()),
                                args=[
                                    Name(id='self', ctx=Load()),
                                    Name(id='forks', ctx=Load()),
                                    Call(
                                        func=Name(id='Uint', ctx=Load()),
                                        args=[
                                            Constant(value=0)],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='U256', ctx=Load()),
                                        args=[
                                            Constant(value=0)],
                                        keywords=[])],
                                keywords=[])),
                        If(
                            test=Attribute(
                                value=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='options',
                                    ctx=Load()),
                                attr='reset',
                                ctx=Load()),
                            body=[
                                Import(
                                    names=[
                                        alias(name='rust_pyspec_glue')]),
                                Assert(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='persist',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)])),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='rust_pyspec_glue', ctx=Load()),
                                                attr='DB',
                                                ctx=Load()),
                                            attr='delete',
                                            ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='persist',
                                                ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='initial_state',
                                    ctx=Load()),
                                ops=[
                                    IsNot()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Assert(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='persist',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)])),
                                If(
                                    test=UnaryOp(
                                        op=Not(),
                                        operand=Call(
                                            func=Attribute(
                                                value=Attribute(
                                                    value=Name(id='os', ctx=Load()),
                                                    attr='path',
                                                    ctx=Load()),
                                                attr='exists',
                                                ctx=Load()),
                                            args=[
                                                Call(
                                                    func=Attribute(
                                                        value=Attribute(
                                                            value=Name(id='os', ctx=Load()),
                                                            attr='path',
                                                            ctx=Load()),
                                                        attr='join',
                                                        ctx=Load()),
                                                    args=[
                                                        Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='options',
                                                                ctx=Load()),
                                                            attr='persist',
                                                            ctx=Load()),
                                                        Constant(value='mdbx.dat')],
                                                    keywords=[])],
                                            keywords=[])),
                                    body=[
                                        Try(
                                            body=[
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='os', ctx=Load()),
                                                            attr='mkdir',
                                                            ctx=Load()),
                                                        args=[
                                                            Attribute(
                                                                value=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='options',
                                                                    ctx=Load()),
                                                                attr='persist',
                                                                ctx=Load())],
                                                        keywords=[]))],
                                            handlers=[
                                                ExceptHandler(
                                                    type=Name(id='FileExistsError', ctx=Load()),
                                                    body=[
                                                        Pass()])],
                                            orelse=[],
                                            finalbody=[]),
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='shutil', ctx=Load()),
                                                    attr='copy',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='os', ctx=Load()),
                                                                attr='path',
                                                                ctx=Load()),
                                                            attr='join',
                                                            ctx=Load()),
                                                        args=[
                                                            Attribute(
                                                                value=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='options',
                                                                    ctx=Load()),
                                                                attr='initial_state',
                                                                ctx=Load()),
                                                            Constant(value='mdbx.dat')],
                                                        keywords=[]),
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='options',
                                                            ctx=Load()),
                                                        attr='persist',
                                                        ctx=Load())],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='state', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='state')],
                                        keywords=[]),
                                    attr='State',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        AnnAssign(
                            target=Name(id='persisted_block', ctx=Store()),
                            annotation=Subscript(
                                value=Name(id='Optional', ctx=Load()),
                                slice=Name(id='Uint', ctx=Load()),
                                ctx=Load()),
                            value=Constant(value=None),
                            simple=1),
                        AnnAssign(
                            target=Name(id='persisted_block_timestamp', ctx=Store()),
                            annotation=Subscript(
                                value=Name(id='Optional', ctx=Load()),
                                slice=Name(id='U256', ctx=Load()),
                                ctx=Load()),
                            value=Constant(value=None),
                            simple=1),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='persist',
                                    ctx=Load()),
                                ops=[
                                    IsNot()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='state_mod', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='state')],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='persisted_block_opt', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='state_mod', ctx=Load()),
                                            attr='get_metadata',
                                            ctx=Load()),
                                        args=[
                                            Name(id='state', ctx=Load()),
                                            Constant(value=b'block_number')],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='persisted_block_timestamp_opt', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='state_mod', ctx=Load()),
                                            attr='get_metadata',
                                            ctx=Load()),
                                        args=[
                                            Name(id='state', ctx=Load()),
                                            Constant(value=b'block_timestamp')],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Name(id='persisted_block_opt', ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='persisted_block', ctx=Store())],
                                            value=Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='int', ctx=Load()),
                                                        args=[
                                                            Name(id='persisted_block_opt', ctx=Load())],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[]),
                                If(
                                    test=Compare(
                                        left=Name(id='persisted_block_timestamp_opt', ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='persisted_block_timestamp', ctx=Store())],
                                            value=Call(
                                                func=Name(id='U256', ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='int', ctx=Load()),
                                                        args=[
                                                            Name(id='persisted_block_timestamp_opt', ctx=Load())],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        If(
                            test=BoolOp(
                                op=Or(),
                                values=[
                                    Compare(
                                        left=Name(id='persisted_block', ctx=Load()),
                                        ops=[
                                            Is()],
                                        comparators=[
                                            Constant(value=None)]),
                                    Compare(
                                        left=Name(id='persisted_block_timestamp', ctx=Load()),
                                        ops=[
                                            Is()],
                                        comparators=[
                                            Constant(value=None)])]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='fork')],
                                                keywords=[]),
                                            attr='BlockChain',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                arg='blocks',
                                                value=List(elts=[], ctx=Load())),
                                            keyword(
                                                arg='state',
                                                value=Name(id='state', ctx=Load())),
                                            keyword(
                                                arg='chain_id',
                                                value=Constant(value=None))])),
                                Assign(
                                    targets=[
                                        Name(id='genesis_configuration', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='genesis', ctx=Load()),
                                            attr='get_genesis_configuration',
                                            ctx=Load()),
                                        args=[
                                            JoinedStr(
                                                values=[
                                                    FormattedValue(
                                                        value=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='options',
                                                                ctx=Load()),
                                                            attr='chain',
                                                            ctx=Load()),
                                                        conversion=-1),
                                                    Constant(value='.json')])],
                                        keywords=[])),
                                AnnAssign(
                                    target=Name(id='description', ctx=Store()),
                                    annotation=Attribute(
                                        value=Name(id='genesis', ctx=Load()),
                                        attr='GenesisFork',
                                        ctx=Load()),
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='genesis', ctx=Load()),
                                            attr='GenesisFork',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                arg='Address',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='fork_types')],
                                                        keywords=[]),
                                                    attr='Address',
                                                    ctx=Load())),
                                            keyword(
                                                arg='Account',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='fork_types')],
                                                        keywords=[]),
                                                    attr='Account',
                                                    ctx=Load())),
                                            keyword(
                                                arg='Trie',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='trie')],
                                                        keywords=[]),
                                                    attr='Trie',
                                                    ctx=Load())),
                                            keyword(
                                                arg='Bloom',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='fork_types')],
                                                        keywords=[]),
                                                    attr='Bloom',
                                                    ctx=Load())),
                                            keyword(
                                                arg='Header',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='blocks')],
                                                        keywords=[]),
                                                    attr='Header',
                                                    ctx=Load())),
                                            keyword(
                                                arg='Block',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='blocks')],
                                                        keywords=[]),
                                                    attr='Block',
                                                    ctx=Load())),
                                            keyword(
                                                arg='set_account',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='state')],
                                                        keywords=[]),
                                                    attr='set_account',
                                                    ctx=Load())),
                                            keyword(
                                                arg='set_storage',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='state')],
                                                        keywords=[]),
                                                    attr='set_storage',
                                                    ctx=Load())),
                                            keyword(
                                                arg='state_root',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='state')],
                                                        keywords=[]),
                                                    attr='state_root',
                                                    ctx=Load())),
                                            keyword(
                                                arg='root',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='trie')],
                                                        keywords=[]),
                                                    attr='root',
                                                    ctx=Load())),
                                            keyword(
                                                arg='hex_to_address',
                                                value=Attribute(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='active_fork',
                                                                ctx=Load()),
                                                            attr='module',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='utils.hexadecimal')],
                                                        keywords=[]),
                                                    attr='hex_to_address',
                                                    ctx=Load()))]),
                                    simple=1),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='genesis', ctx=Load()),
                                            attr='add_genesis_block',
                                            ctx=Load()),
                                        args=[
                                            Name(id='description', ctx=Load()),
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='chain',
                                                ctx=Load()),
                                            Name(id='genesis_configuration', ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='downloader',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='BlockDownloader', ctx=Load()),
                                        args=[
                                            Name(id='forks', ctx=Load()),
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='rpc_url',
                                                ctx=Load()),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='geth',
                                                ctx=Load()),
                                            Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Constant(value=0)],
                                                keywords=[]),
                                            Attribute(
                                                value=Name(id='genesis_configuration', ctx=Load()),
                                                attr='timestamp',
                                                ctx=Load())],
                                        keywords=[])),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='set_block',
                                            ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Constant(value=0)],
                                                keywords=[]),
                                            Attribute(
                                                value=Name(id='genesis_configuration', ctx=Load()),
                                                attr='timestamp',
                                                ctx=Load())],
                                        keywords=[]))],
                            orelse=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='set_block',
                                            ctx=Load()),
                                        args=[
                                            Name(id='persisted_block', ctx=Load()),
                                            Name(id='persisted_block_timestamp', ctx=Load())],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Name(id='persisted_block', ctx=Load()),
                                        ops=[
                                            Lt()],
                                        comparators=[
                                            Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Constant(value=256)],
                                                keywords=[])]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='initial_blocks_length', ctx=Store())],
                                            value=Name(id='persisted_block', ctx=Load()))],
                                    orelse=[
                                        Assign(
                                            targets=[
                                                Name(id='initial_blocks_length', ctx=Store())],
                                            value=Call(
                                                func=Name(id='Uint', ctx=Load()),
                                                args=[
                                                    Constant(value=255)],
                                                keywords=[]))]),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='downloader',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='BlockDownloader', ctx=Load()),
                                        args=[
                                            Name(id='forks', ctx=Load()),
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='rpc_url',
                                                ctx=Load()),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='geth',
                                                ctx=Load()),
                                            BinOp(
                                                left=Name(id='persisted_block', ctx=Load()),
                                                op=Sub(),
                                                right=Name(id='initial_blocks_length', ctx=Load())),
                                            Name(id='persisted_block_timestamp', ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='blocks', ctx=Store())],
                                    value=List(elts=[], ctx=Load())),
                                For(
                                    target=Name(id='_', ctx=Store()),
                                    iter=Call(
                                        func=Name(id='range', ctx=Load()),
                                        args=[
                                            Name(id='initial_blocks_length', ctx=Load())],
                                        keywords=[]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='blocks', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='downloader',
                                                                ctx=Load()),
                                                            attr='take_block',
                                                            ctx=Load()),
                                                        args=[],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[]),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='fork')],
                                                keywords=[]),
                                            attr='BlockChain',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                arg='blocks',
                                                value=Name(id='blocks', ctx=Load())),
                                            keyword(
                                                arg='state',
                                                value=Name(id='state', ctx=Load())),
                                            keyword(
                                                arg='chain_id',
                                                value=Call(
                                                    func=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='fetch_chain_id',
                                                        ctx=Load()),
                                                    args=[
                                                        Name(id='state', ctx=Load())],
                                                    keywords=[]))]))])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='persist',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Save the block list, state and chain id to file.\n        ')),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='persist',
                                    ctx=Load()),
                                ops=[
                                    Is()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Return()],
                            orelse=[]),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='debug',
                                    ctx=Load()),
                                args=[
                                    Constant(value='persisting blocks and state...')],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='state_mod', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='module',
                                    ctx=Load()),
                                args=[
                                    Constant(value='state')],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='state_mod', ctx=Load()),
                                    attr='set_metadata',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Load()),
                                        attr='state',
                                        ctx=Load()),
                                    Constant(value=b'chain_id'),
                                    Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Name(id='str', ctx=Load()),
                                                args=[
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='chain',
                                                            ctx=Load()),
                                                        attr='chain_id',
                                                        ctx=Load())],
                                                keywords=[]),
                                            attr='encode',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='start', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='time', ctx=Load()),
                                    attr='monotonic',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='state_mod', ctx=Load()),
                                    attr='commit_db_transaction',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Load()),
                                        attr='state',
                                        ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='state_mod', ctx=Load()),
                                    attr='begin_db_transaction',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Load()),
                                        attr='state',
                                        ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='end', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='time', ctx=Load()),
                                    attr='monotonic',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='info',
                                    ctx=Load()),
                                args=[
                                    Constant(value='persisted state and %d blocks (took %.3f)'),
                                    Call(
                                        func=Name(id='len', ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='chain',
                                                    ctx=Load()),
                                                attr='blocks',
                                                ctx=Load())],
                                        keywords=[]),
                                    BinOp(
                                        left=Name(id='end', ctx=Load()),
                                        op=Sub(),
                                        right=Name(id='start', ctx=Load()))],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='fetch_chain_id',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='state',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Fetch the persisted chain id from the database.\n        ')),
                        Assign(
                            targets=[
                                Name(id='state_mod', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='module',
                                    ctx=Load()),
                                args=[
                                    Constant(value='state')],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='chain_id', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='state_mod', ctx=Load()),
                                    attr='get_metadata',
                                    ctx=Load()),
                                args=[
                                    Name(id='state', ctx=Load()),
                                    Constant(value=b'chain_id')],
                                keywords=[])),
                        If(
                            test=Compare(
                                left=Name(id='chain_id', ctx=Load()),
                                ops=[
                                    IsNot()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='chain_id', ctx=Store())],
                                    value=Call(
                                        func=Name(id='U64', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='int', ctx=Load()),
                                                args=[
                                                    Name(id='chain_id', ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Name(id='chain_id', ctx=Load()))],
                    decorator_list=[],
                    returns=Name(id='U64', ctx=Load())),
                FunctionDef(
                    name='process_blocks',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Validate blocks that have been fetched.\n        ')),
                        Assign(
                            targets=[
                                Name(id='time_of_last_commit', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='time', ctx=Load()),
                                    attr='monotonic',
                                    ctx=Load()),
                                args=[],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='gas_since_last_commit', ctx=Store())],
                            value=Constant(value=0)),
                        AnnAssign(
                            target=Name(id='last_committed_block', ctx=Store()),
                            annotation=Subscript(
                                value=Name(id='Optional', ctx=Load()),
                                slice=Name(id='int', ctx=Load()),
                                ctx=Load()),
                            value=Constant(value=None),
                            simple=1),
                        AnnAssign(
                            target=Name(id='block', ctx=Store()),
                            annotation=Subscript(
                                value=Name(id='Optional', ctx=Load()),
                                slice=Name(id='Any', ctx=Load()),
                                ctx=Load()),
                            value=Constant(value=None),
                            simple=1),
                        FunctionDef(
                            name='persist',
                            args=arguments(
                                posonlyargs=[],
                                args=[],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            body=[
                                Nonlocal(
                                    names=[
                                        'time_of_last_commit']),
                                Nonlocal(
                                    names=[
                                        'gas_since_last_commit']),
                                Nonlocal(
                                    names=[
                                        'last_committed_block']),
                                Assign(
                                    targets=[
                                        Name(id='now', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='time', ctx=Load()),
                                            attr='monotonic',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='elapsed', ctx=Store())],
                                    value=BinOp(
                                        left=Name(id='now', ctx=Load()),
                                        op=Sub(),
                                        right=Name(id='time_of_last_commit', ctx=Load()))),
                                Assign(
                                    targets=[
                                        Name(id='time_of_last_commit', ctx=Store())],
                                    value=Name(id='now', ctx=Load())),
                                If(
                                    test=Compare(
                                        left=Name(id='elapsed', ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Constant(value=0)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='elapsed', ctx=Store())],
                                            value=Constant(value=1))],
                                    orelse=[]),
                                Assign(
                                    targets=[
                                        Name(id='m_gas', ctx=Store())],
                                    value=BinOp(
                                        left=Name(id='gas_since_last_commit', ctx=Load()),
                                        op=Div(),
                                        right=Constant(value=1000000.0))),
                                Assign(
                                    targets=[
                                        Name(id='m_gas_per_second', ctx=Store())],
                                    value=BinOp(
                                        left=Name(id='m_gas', ctx=Load()),
                                        op=Div(),
                                        right=Name(id='elapsed', ctx=Load()))),
                                Assign(
                                    targets=[
                                        Name(id='gas_since_last_commit', ctx=Store())],
                                    value=Constant(value=0)),
                                If(
                                    test=Compare(
                                        left=Name(id='block', ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='count', ctx=Store())],
                                            value=Attribute(
                                                value=Attribute(
                                                    value=Name(id='block', ctx=Load()),
                                                    attr='header',
                                                    ctx=Load()),
                                                attr='number',
                                                ctx=Load())),
                                        If(
                                            test=Compare(
                                                left=Name(id='last_committed_block', ctx=Load()),
                                                ops=[
                                                    IsNot()],
                                                comparators=[
                                                    Constant(value=None)]),
                                            body=[
                                                AugAssign(
                                                    target=Name(id='count', ctx=Store()),
                                                    op=Sub(),
                                                    value=Name(id='last_committed_block', ctx=Load()))],
                                            orelse=[]),
                                        Assign(
                                            targets=[
                                                Name(id='last_committed_block', ctx=Store())],
                                            value=Attribute(
                                                value=Attribute(
                                                    value=Name(id='block', ctx=Load()),
                                                    attr='header',
                                                    ctx=Load()),
                                                attr='number',
                                                ctx=Load())),
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='log',
                                                        ctx=Load()),
                                                    attr='info',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='imported chain segment count=%d mgas=%f mgasps=%f block=%d'),
                                                    Name(id='count', ctx=Load()),
                                                    Name(id='m_gas', ctx=Load()),
                                                    Name(id='m_gas_per_second', ctx=Load()),
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='block', ctx=Load()),
                                                            attr='header',
                                                            ctx=Load()),
                                                        attr='number',
                                                        ctx=Load())],
                                                keywords=[]))],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='persist',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[]))],
                            decorator_list=[],
                            returns=Constant(value=None)),
                        While(
                            test=Constant(value=True),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='block', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='downloader',
                                                ctx=Load()),
                                            attr='take_block',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Name(id='block', ctx=Load()),
                                        ops=[
                                            Is()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Break()],
                                    orelse=[]),
                                Try(
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='process_block',
                                                    ctx=Load()),
                                                args=[
                                                    Name(id='block', ctx=Load())],
                                                keywords=[]))],
                                    handlers=[
                                        ExceptHandler(
                                            type=Name(id='Exception', ctx=Load()),
                                            body=[
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='log',
                                                                ctx=Load()),
                                                            attr='exception',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value='failed to process block %d'),
                                                            Attribute(
                                                                value=Attribute(
                                                                    value=Name(id='block', ctx=Load()),
                                                                    attr='header',
                                                                    ctx=Load()),
                                                                attr='number',
                                                                ctx=Load())],
                                                        keywords=[])),
                                                Raise()])],
                                    orelse=[],
                                    finalbody=[]),
                                AugAssign(
                                    target=Name(id='gas_since_last_commit', ctx=Store()),
                                    op=Add(),
                                    value=Constant(value=30000)),
                                AugAssign(
                                    target=Name(id='gas_since_last_commit', ctx=Store()),
                                    op=Add(),
                                    value=Call(
                                        func=Name(id='int', ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='block', ctx=Load()),
                                                    attr='header',
                                                    ctx=Load()),
                                                attr='gas_used',
                                                ctx=Load())],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='options',
                                                ctx=Load()),
                                            attr='persist',
                                            ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='state_mod', ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='state')],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='state_mod', ctx=Load()),
                                                    attr='set_metadata',
                                                    ctx=Load()),
                                                args=[
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='chain',
                                                            ctx=Load()),
                                                        attr='state',
                                                        ctx=Load()),
                                                    Constant(value=b'block_number'),
                                                    Call(
                                                        func=Attribute(
                                                            value=Call(
                                                                func=Name(id='str', ctx=Load()),
                                                                args=[
                                                                    Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='block_number',
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            attr='encode',
                                                            ctx=Load()),
                                                        args=[],
                                                        keywords=[])],
                                                keywords=[])),
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='state_mod', ctx=Load()),
                                                    attr='set_metadata',
                                                    ctx=Load()),
                                                args=[
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='chain',
                                                            ctx=Load()),
                                                        attr='state',
                                                        ctx=Load()),
                                                    Constant(value=b'block_timestamp'),
                                                    Call(
                                                        func=Attribute(
                                                            value=Call(
                                                                func=Name(id='str', ctx=Load()),
                                                                args=[
                                                                    Attribute(
                                                                        value=Attribute(
                                                                            value=Name(id='block', ctx=Load()),
                                                                            attr='header',
                                                                            ctx=Load()),
                                                                        attr='timestamp',
                                                                        ctx=Load())],
                                                                keywords=[]),
                                                            attr='encode',
                                                            ctx=Load()),
                                                        args=[],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='debug',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='block %d applied'),
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='block_number',
                                                ctx=Load())],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='block_number',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='options',
                                                    ctx=Load()),
                                                attr='stop_at',
                                                ctx=Load())]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Name(id='persist', ctx=Load()),
                                                args=[],
                                                keywords=[])),
                                        Return()],
                                    orelse=[]),
                                If(
                                    test=BoolOp(
                                        op=And(),
                                        values=[
                                            Compare(
                                                left=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='block_number',
                                                    ctx=Load()),
                                                ops=[
                                                    Gt()],
                                                comparators=[
                                                    Call(
                                                        func=Name(id='Uint', ctx=Load()),
                                                        args=[
                                                            Constant(value=2220000)],
                                                        keywords=[])]),
                                            Compare(
                                                left=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='block_number',
                                                    ctx=Load()),
                                                ops=[
                                                    Lt()],
                                                comparators=[
                                                    Call(
                                                        func=Name(id='Uint', ctx=Load()),
                                                        args=[
                                                            Constant(value=2463000)],
                                                        keywords=[])])]),
                                    body=[
                                        If(
                                            test=Compare(
                                                left=Name(id='gas_since_last_commit', ctx=Load()),
                                                ops=[
                                                    Gt()],
                                                comparators=[
                                                    BinOp(
                                                        left=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='self', ctx=Load()),
                                                                attr='options',
                                                                ctx=Load()),
                                                            attr='gas_per_commit',
                                                            ctx=Load()),
                                                        op=Div(),
                                                        right=Constant(value=10))]),
                                            body=[
                                                Expr(
                                                    value=Call(
                                                        func=Name(id='persist', ctx=Load()),
                                                        args=[],
                                                        keywords=[]))],
                                            orelse=[])],
                                    orelse=[
                                        If(
                                            test=BoolOp(
                                                op=And(),
                                                values=[
                                                    Compare(
                                                        left=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='block_number',
                                                            ctx=Load()),
                                                        ops=[
                                                            Gt()],
                                                        comparators=[
                                                            Call(
                                                                func=Name(id='Uint', ctx=Load()),
                                                                args=[
                                                                    Constant(value=2675000)],
                                                                keywords=[])]),
                                                    Compare(
                                                        left=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='block_number',
                                                            ctx=Load()),
                                                        ops=[
                                                            Lt()],
                                                        comparators=[
                                                            Call(
                                                                func=Name(id='Uint', ctx=Load()),
                                                                args=[
                                                                    Constant(value=2700598)],
                                                                keywords=[])])]),
                                            body=[
                                                If(
                                                    test=Compare(
                                                        left=Name(id='gas_since_last_commit', ctx=Load()),
                                                        ops=[
                                                            Gt()],
                                                        comparators=[
                                                            BinOp(
                                                                left=Attribute(
                                                                    value=Attribute(
                                                                        value=Name(id='self', ctx=Load()),
                                                                        attr='options',
                                                                        ctx=Load()),
                                                                    attr='gas_per_commit',
                                                                    ctx=Load()),
                                                                op=Div(),
                                                                right=Constant(value=10))]),
                                                    body=[
                                                        Expr(
                                                            value=Call(
                                                                func=Name(id='persist', ctx=Load()),
                                                                args=[],
                                                                keywords=[]))],
                                                    orelse=[])],
                                            orelse=[
                                                If(
                                                    test=Compare(
                                                        left=Name(id='gas_since_last_commit', ctx=Load()),
                                                        ops=[
                                                            Gt()],
                                                        comparators=[
                                                            Attribute(
                                                                value=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='options',
                                                                    ctx=Load()),
                                                                attr='gas_per_commit',
                                                                ctx=Load())]),
                                                    body=[
                                                        Expr(
                                                            value=Call(
                                                                func=Name(id='persist', ctx=Load()),
                                                                args=[],
                                                                keywords=[]))],
                                                    orelse=[])])])],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='process_block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='block',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Process a single block.\n        ')),
                        If(
                            test=BoolOp(
                                op=Or(),
                                values=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='advance_block',
                                            ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='block', ctx=Load()),
                                                    attr='header',
                                                    ctx=Load()),
                                                attr='timestamp',
                                                ctx=Load())],
                                        keywords=[]),
                                    Compare(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='block_number',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Constant(value=1)])]),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='debug',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='applying %s fork...'),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='active_fork',
                                                    ctx=Load()),
                                                attr='name',
                                                ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='start', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='time', ctx=Load()),
                                            attr='monotonic',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='chain',
                                            ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='module',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='fork')],
                                                keywords=[]),
                                            attr='apply_fork',
                                            ctx=Load()),
                                        args=[
                                            Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='chain',
                                                ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='end', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='time', ctx=Load()),
                                            attr='monotonic',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='log',
                                                ctx=Load()),
                                            attr='info',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='applied %s fork (took %.3f)'),
                                            Attribute(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='active_fork',
                                                    ctx=Load()),
                                                attr='name',
                                                ctx=Load()),
                                            BinOp(
                                                left=Name(id='end', ctx=Load()),
                                                op=Sub(),
                                                right=Name(id='start', ctx=Load()))],
                                        keywords=[]))],
                            orelse=[]),
                        Assert(
                            test=BoolOp(
                                op=Or(),
                                values=[
                                    UnaryOp(
                                        op=Not(),
                                        operand=Attribute(
                                            value=Attribute(
                                                value=Name(id='self', ctx=Load()),
                                                attr='chain',
                                                ctx=Load()),
                                            attr='blocks',
                                            ctx=Load())),
                                    Compare(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='block_number',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            BinOp(
                                                left=Attribute(
                                                    value=Attribute(
                                                        value=Subscript(
                                                            value=Attribute(
                                                                value=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='chain',
                                                                    ctx=Load()),
                                                                attr='blocks',
                                                                ctx=Load()),
                                                            slice=UnaryOp(
                                                                op=USub(),
                                                                operand=Constant(value=1)),
                                                            ctx=Load()),
                                                        attr='header',
                                                        ctx=Load()),
                                                    attr='number',
                                                    ctx=Load()),
                                                op=Add(),
                                                right=Call(
                                                    func=Name(id='Uint', ctx=Load()),
                                                    args=[
                                                        Constant(value=1)],
                                                    keywords=[]))])])),
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='block', ctx=Load()),
                                        attr='header',
                                        ctx=Load()),
                                    attr='number',
                                    ctx=Load()),
                                ops=[
                                    NotEq()],
                                comparators=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='block_number',
                                        ctx=Load())]),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='Exception', ctx=Load()),
                                        args=[
                                            JoinedStr(
                                                values=[
                                                    Constant(value='expected block '),
                                                    FormattedValue(
                                                        value=Attribute(
                                                            value=Name(id='self', ctx=Load()),
                                                            attr='block_number',
                                                            ctx=Load()),
                                                        conversion=-1),
                                                    Constant(value=' but got '),
                                                    FormattedValue(
                                                        value=Attribute(
                                                            value=Attribute(
                                                                value=Name(id='block', ctx=Load()),
                                                                attr='header',
                                                                ctx=Load()),
                                                            attr='number',
                                                            ctx=Load()),
                                                        conversion=-1)])],
                                        keywords=[]))],
                            orelse=[]),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='log',
                                        ctx=Load()),
                                    attr='debug',
                                    ctx=Load()),
                                args=[
                                    Constant(value='applying block %d...'),
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='block_number',
                                        ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='module',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='fork')],
                                        keywords=[]),
                                    attr='state_transition',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='chain',
                                        ctx=Load()),
                                    Name(id='block', ctx=Load())],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Constant(value=None))],
            decorator_list=[]),
        FunctionDef(
            name='main',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    Using an RPC provider, fetch each block and validate it.\n    ')),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='logging', ctx=Load()),
                            attr='basicConfig',
                            ctx=Load()),
                        args=[],
                        keywords=[
                            keyword(
                                arg='level',
                                value=Attribute(
                                    value=Name(id='logging', ctx=Load()),
                                    attr='INFO',
                                    ctx=Load()))])),
                Assign(
                    targets=[
                        Name(id='sync', ctx=Store())],
                    value=Call(
                        func=Name(id='Sync', ctx=Load()),
                        args=[],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='sync', ctx=Load()),
                            attr='process_blocks',
                            ctx=Load()),
                        args=[],
                        keywords=[]))],
            decorator_list=[],
            returns=Constant(value=None)),
        If(
            test=Compare(
                left=Name(id='__name__', ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='__main__')]),
            body=[
                Expr(
                    value=Call(
                        func=Name(id='main', ctx=Load()),
                        args=[],
                        keywords=[]))],
            orelse=[])],
    type_ignores=[])