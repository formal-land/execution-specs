Module(
    body=[
        Expr(
            value=Constant(value='\nDefine t8n Env class\n')),
        Import(
            names=[
                alias(name='json')]),
        ImportFrom(
            module='dataclasses',
            names=[
                alias(name='dataclass')],
            level=0),
        ImportFrom(
            module='typing',
            names=[
                alias(name='TYPE_CHECKING'),
                alias(name='Any'),
                alias(name='Dict'),
                alias(name='List'),
                alias(name='Optional')],
            level=0),
        ImportFrom(
            module='ethereum_types.bytes',
            names=[
                alias(name='Bytes32')],
            level=0),
        ImportFrom(
            module='ethereum_types.numeric',
            names=[
                alias(name='U64'),
                alias(name='U256'),
                alias(name='Uint')],
            level=0),
        ImportFrom(
            module='ethereum',
            names=[
                alias(name='rlp')],
            level=0),
        ImportFrom(
            module='ethereum.crypto.hash',
            names=[
                alias(name='Hash32'),
                alias(name='keccak256')],
            level=0),
        ImportFrom(
            module='ethereum.utils.byte',
            names=[
                alias(name='left_pad_zero_bytes')],
            level=0),
        ImportFrom(
            module='ethereum.utils.hexadecimal',
            names=[
                alias(name='hex_to_bytes')],
            level=0),
        ImportFrom(
            module='utils',
            names=[
                alias(name='parse_hex_or_int')],
            level=2),
        If(
            test=Name(id='TYPE_CHECKING', ctx=Load()),
            body=[
                ImportFrom(
                    module='ethereum_spec_tools.evm_tools.t8n',
                    names=[
                        alias(name='T8N')],
                    level=0)],
            orelse=[]),
        ClassDef(
            name='Ommer',
            bases=[],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='The Ommer type for the t8n tool.')),
                AnnAssign(
                    target=Name(id='delta', ctx=Store()),
                    annotation=Name(id='str', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='address', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1)],
            decorator_list=[
                Name(id='dataclass', ctx=Load())]),
        ClassDef(
            name='Env',
            bases=[],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    The environment for the transition tool.\n    ')),
                AnnAssign(
                    target=Name(id='coinbase', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_gas_limit', ctx=Store()),
                    annotation=Name(id='Uint', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_number', ctx=Store()),
                    annotation=Name(id='Uint', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_timestamp', ctx=Store()),
                    annotation=Name(id='U256', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='withdrawals', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_difficulty', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='prev_randao', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Bytes32', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_difficulty', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_timestamp', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='U256', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='base_fee_per_gas', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_gas_used', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_gas_limit', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_base_fee_per_gas', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Uint', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='block_hashes', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Subscript(
                            value=Name(id='List', ctx=Load()),
                            slice=Name(id='Any', ctx=Load()),
                            ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_ommers_hash', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Hash32', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='ommers', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_beacon_block_root', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='Hash32', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_excess_blob_gas', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='U64', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='parent_blob_gas_used', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='U64', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='excess_blob_gas', ctx=Store()),
                    annotation=Subscript(
                        value=Name(id='Optional', ctx=Load()),
                        slice=Name(id='U64', ctx=Load()),
                        ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N')),
                            arg(
                                arg='stdin',
                                annotation=Subscript(
                                    value=Name(id='Optional', ctx=Load()),
                                    slice=Name(id='Dict', ctx=Load()),
                                    ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[
                            Constant(value=None)]),
                    body=[
                        If(
                            test=Compare(
                                left=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='options',
                                        ctx=Load()),
                                    attr='input_env',
                                    ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value='stdin')]),
                            body=[
                                Assert(
                                    test=Compare(
                                        left=Name(id='stdin', ctx=Load()),
                                        ops=[
                                            IsNot()],
                                        comparators=[
                                            Constant(value=None)])),
                                Assign(
                                    targets=[
                                        Name(id='data', ctx=Store())],
                                    value=Subscript(
                                        value=Name(id='stdin', ctx=Load()),
                                        slice=Constant(value='env'),
                                        ctx=Load()))],
                            orelse=[
                                With(
                                    items=[
                                        withitem(
                                            context_expr=Call(
                                                func=Name(id='open', ctx=Load()),
                                                args=[
                                                    Attribute(
                                                        value=Attribute(
                                                            value=Name(id='t8n', ctx=Load()),
                                                            attr='options',
                                                            ctx=Load()),
                                                        attr='input_env',
                                                        ctx=Load()),
                                                    Constant(value='r')],
                                                keywords=[]),
                                            optional_vars=Name(id='f', ctx=Store()))],
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='data', ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='json', ctx=Load()),
                                                    attr='load',
                                                    ctx=Load()),
                                                args=[
                                                    Name(id='f', ctx=Load())],
                                                keywords=[]))])]),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='coinbase',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='hex_to_address',
                                    ctx=Load()),
                                args=[
                                    Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='currentCoinbase'),
                                        ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_gas_limit',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                args=[
                                    Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='currentGasLimit'),
                                        ctx=Load()),
                                    Name(id='Uint', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_number',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                args=[
                                    Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='currentNumber'),
                                        ctx=Load()),
                                    Name(id='Uint', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_timestamp',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                args=[
                                    Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='currentTimestamp'),
                                        ctx=Load()),
                                    Name(id='U256', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_block_difficulty',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load()),
                                    Name(id='t8n', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_base_fee_per_gas',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load()),
                                    Name(id='t8n', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_randao',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load()),
                                    Name(id='t8n', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_block_hashes',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_ommers',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load()),
                                    Name(id='t8n', ctx=Load())],
                                keywords=[])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='read_withdrawals',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load()),
                                    Name(id='t8n', ctx=Load())],
                                keywords=[])),
                        If(
                            test=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='is_after_fork',
                                    ctx=Load()),
                                args=[
                                    Constant(value='ethereum.cancun')],
                                keywords=[]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='parent_beacon_block_root_hex', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='data', ctx=Load()),
                                            attr='get',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='parentBeaconBlockRoot')],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='parent_beacon_block_root',
                                            ctx=Store())],
                                    value=IfExp(
                                        test=Compare(
                                            left=Name(id='parent_beacon_block_root_hex', ctx=Load()),
                                            ops=[
                                                IsNot()],
                                            comparators=[
                                                Constant(value=None)]),
                                        body=Call(
                                            func=Name(id='Bytes32', ctx=Load()),
                                            args=[
                                                Call(
                                                    func=Name(id='hex_to_bytes', ctx=Load()),
                                                    args=[
                                                        Name(id='parent_beacon_block_root_hex', ctx=Load())],
                                                    keywords=[])],
                                            keywords=[]),
                                        orelse=Constant(value=None))),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='read_excess_blob_gas',
                                            ctx=Load()),
                                        args=[
                                            Name(id='data', ctx=Load()),
                                            Name(id='t8n', ctx=Load())],
                                        keywords=[]))],
                            orelse=[])],
                    decorator_list=[]),
                FunctionDef(
                    name='read_excess_blob_gas',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the excess_blob_gas from the data. If the excess blob gas is\n        not present, it is calculated from the parent block parameters.\n        ')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_blob_gas_used',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='U64', ctx=Load()),
                                args=[
                                    Constant(value=0)],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_excess_blob_gas',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='U64', ctx=Load()),
                                args=[
                                    Constant(value=0)],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='excess_blob_gas',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        If(
                            test=UnaryOp(
                                op=Not(),
                                operand=Call(
                                    func=Attribute(
                                        value=Attribute(
                                            value=Name(id='t8n', ctx=Load()),
                                            attr='fork',
                                            ctx=Load()),
                                        attr='is_after_fork',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='ethereum.cancun')],
                                    keywords=[])),
                            body=[
                                Return()],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Constant(value='currentExcessBlobGas'),
                                ops=[
                                    In()],
                                comparators=[
                                    Name(id='data', ctx=Load())]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='excess_blob_gas',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='parse_hex_or_int', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='data', ctx=Load()),
                                                slice=Constant(value='currentExcessBlobGas'),
                                                ctx=Load()),
                                            Name(id='U64', ctx=Load())],
                                        keywords=[])),
                                Return()],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Constant(value='parentExcessBlobGas'),
                                ops=[
                                    In()],
                                comparators=[
                                    Name(id='data', ctx=Load())]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='parent_excess_blob_gas',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='parse_hex_or_int', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='data', ctx=Load()),
                                                slice=Constant(value='parentExcessBlobGas'),
                                                ctx=Load()),
                                            Name(id='U64', ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Constant(value='parentBlobGasUsed'),
                                ops=[
                                    In()],
                                comparators=[
                                    Name(id='data', ctx=Load())]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='parent_blob_gas_used',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='parse_hex_or_int', ctx=Load()),
                                        args=[
                                            Subscript(
                                                value=Name(id='data', ctx=Load()),
                                                slice=Constant(value='parentBlobGasUsed'),
                                                ctx=Load()),
                                            Name(id='U64', ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='excess_blob_gas', ctx=Store())],
                            value=BinOp(
                                left=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_excess_blob_gas',
                                    ctx=Load()),
                                op=Add(),
                                right=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_blob_gas_used',
                                    ctx=Load()))),
                        Assign(
                            targets=[
                                Name(id='target_blob_gas_per_block', ctx=Store())],
                            value=Attribute(
                                value=Attribute(
                                    value=Name(id='t8n', ctx=Load()),
                                    attr='fork',
                                    ctx=Load()),
                                attr='TARGET_BLOB_GAS_PER_BLOCK',
                                ctx=Load())),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='excess_blob_gas',
                                    ctx=Store())],
                            value=Call(
                                func=Name(id='U64', ctx=Load()),
                                args=[
                                    Constant(value=0)],
                                keywords=[])),
                        If(
                            test=Compare(
                                left=Name(id='excess_blob_gas', ctx=Load()),
                                ops=[
                                    GtE()],
                                comparators=[
                                    Name(id='target_blob_gas_per_block', ctx=Load())]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='excess_blob_gas',
                                            ctx=Store())],
                                    value=BinOp(
                                        left=Name(id='excess_blob_gas', ctx=Load()),
                                        op=Sub(),
                                        right=Name(id='target_blob_gas_per_block', ctx=Load())))],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_base_fee_per_gas',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the base_fee_per_gas from the data. If the base fee is\n        not present, it is calculated from the parent block parameters.\n        ')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_gas_used',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_gas_limit',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_base_fee_per_gas',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='base_fee_per_gas',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        If(
                            test=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='is_after_fork',
                                    ctx=Load()),
                                args=[
                                    Constant(value='ethereum.london')],
                                keywords=[]),
                            body=[
                                If(
                                    test=Compare(
                                        left=Constant(value='currentBaseFee'),
                                        ops=[
                                            In()],
                                        comparators=[
                                            Name(id='data', ctx=Load())]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='base_fee_per_gas',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='currentBaseFee'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[]))],
                                    orelse=[
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='parent_gas_used',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='parentGasUsed'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[])),
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='parent_gas_limit',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='parentGasLimit'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[])),
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='parent_base_fee_per_gas',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='parentBaseFee'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[])),
                                        AnnAssign(
                                            target=Name(id='parameters', ctx=Store()),
                                            annotation=Subscript(
                                                value=Name(id='List', ctx=Load()),
                                                slice=Name(id='object', ctx=Load()),
                                                ctx=Load()),
                                            value=List(
                                                elts=[
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='block_gas_limit',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='parent_gas_limit',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='parent_gas_used',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='parent_base_fee_per_gas',
                                                        ctx=Load())],
                                                ctx=Load()),
                                            simple=1),
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='base_fee_per_gas',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='t8n', ctx=Load()),
                                                        attr='fork',
                                                        ctx=Load()),
                                                    attr='calculate_base_fee_per_gas',
                                                    ctx=Load()),
                                                args=[
                                                    Starred(
                                                        value=Name(id='parameters', ctx=Load()),
                                                        ctx=Load())],
                                                keywords=[]))])],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_randao',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the randao from the data.\n        ')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='prev_randao',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        If(
                            test=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='is_after_fork',
                                    ctx=Load()),
                                args=[
                                    Constant(value='ethereum.paris')],
                                keywords=[]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='current_random', ctx=Store())],
                                    value=Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='currentRandom'),
                                        ctx=Load())),
                                If(
                                    test=Call(
                                        func=Attribute(
                                            value=Name(id='current_random', ctx=Load()),
                                            attr='startswith',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='0x')],
                                        keywords=[]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='current_random', ctx=Store())],
                                            value=Subscript(
                                                value=Name(id='current_random', ctx=Load()),
                                                slice=Slice(
                                                    lower=Constant(value=2)),
                                                ctx=Load()))],
                                    orelse=[]),
                                If(
                                    test=Compare(
                                        left=BinOp(
                                            left=Call(
                                                func=Name(id='len', ctx=Load()),
                                                args=[
                                                    Name(id='current_random', ctx=Load())],
                                                keywords=[]),
                                            op=Mod(),
                                            right=Constant(value=2)),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Constant(value=1)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='current_random', ctx=Store())],
                                            value=BinOp(
                                                left=Constant(value='0'),
                                                op=Add(),
                                                right=Name(id='current_random', ctx=Load())))],
                                    orelse=[]),
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='prev_randao',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='Bytes32', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='left_pad_zero_bytes', ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='hex_to_bytes', ctx=Load()),
                                                        args=[
                                                            Name(id='current_random', ctx=Load())],
                                                        keywords=[]),
                                                    Constant(value=32)],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_withdrawals',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the withdrawals from the data.\n        ')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='withdrawals',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        If(
                            test=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='is_after_fork',
                                    ctx=Load()),
                                args=[
                                    Constant(value='ethereum.shanghai')],
                                keywords=[]),
                            body=[
                                Assign(
                                    targets=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='withdrawals',
                                            ctx=Store())],
                                    value=Call(
                                        func=Name(id='tuple', ctx=Load()),
                                        args=[
                                            GeneratorExp(
                                                elt=Call(
                                                    func=Attribute(
                                                        value=Name(id='t8n', ctx=Load()),
                                                        attr='json_to_withdrawals',
                                                        ctx=Load()),
                                                    args=[
                                                        Name(id='wd', ctx=Load())],
                                                    keywords=[]),
                                                generators=[
                                                    comprehension(
                                                        target=Name(id='wd', ctx=Store()),
                                                        iter=Subscript(
                                                            value=Name(id='data', ctx=Load()),
                                                            slice=Constant(value='withdrawals'),
                                                            ctx=Load()),
                                                        ifs=[],
                                                        is_async=0)])],
                                        keywords=[]))],
                            orelse=[])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_block_difficulty',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the block difficulty from the data.\n        If `currentDifficulty` is present, it is used. Otherwise,\n        the difficulty is calculated from the parent block.\n        ')),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_difficulty',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_timestamp',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_difficulty',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='parent_ommers_hash',
                                    ctx=Store())],
                            value=Constant(value=None)),
                        If(
                            test=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='t8n', ctx=Load()),
                                        attr='fork',
                                        ctx=Load()),
                                    attr='is_after_fork',
                                    ctx=Load()),
                                args=[
                                    Constant(value='ethereum.paris')],
                                keywords=[]),
                            body=[
                                Return()],
                            orelse=[
                                If(
                                    test=Compare(
                                        left=Constant(value='currentDifficulty'),
                                        ops=[
                                            In()],
                                        comparators=[
                                            Name(id='data', ctx=Load())]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='block_difficulty',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='currentDifficulty'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[]))],
                                    orelse=[
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='parent_timestamp',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='parentTimestamp'),
                                                        ctx=Load()),
                                                    Name(id='U256', ctx=Load())],
                                                keywords=[])),
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='parent_difficulty',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Name(id='parse_hex_or_int', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='parentDifficulty'),
                                                        ctx=Load()),
                                                    Name(id='Uint', ctx=Load())],
                                                keywords=[])),
                                        AnnAssign(
                                            target=Name(id='args', ctx=Store()),
                                            annotation=Subscript(
                                                value=Name(id='List', ctx=Load()),
                                                slice=Name(id='object', ctx=Load()),
                                                ctx=Load()),
                                            value=List(
                                                elts=[
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='block_number',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='block_timestamp',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='parent_timestamp',
                                                        ctx=Load()),
                                                    Attribute(
                                                        value=Name(id='self', ctx=Load()),
                                                        attr='parent_difficulty',
                                                        ctx=Load())],
                                                ctx=Load()),
                                            simple=1),
                                        If(
                                            test=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='t8n', ctx=Load()),
                                                        attr='fork',
                                                        ctx=Load()),
                                                    attr='is_after_fork',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value='ethereum.byzantium')],
                                                keywords=[]),
                                            body=[
                                                If(
                                                    test=Compare(
                                                        left=Constant(value='parentUncleHash'),
                                                        ops=[
                                                            In()],
                                                        comparators=[
                                                            Name(id='data', ctx=Load())]),
                                                    body=[
                                                        Assign(
                                                            targets=[
                                                                Name(id='EMPTY_OMMER_HASH', ctx=Store())],
                                                            value=Call(
                                                                func=Name(id='keccak256', ctx=Load()),
                                                                args=[
                                                                    Call(
                                                                        func=Attribute(
                                                                            value=Name(id='rlp', ctx=Load()),
                                                                            attr='encode',
                                                                            ctx=Load()),
                                                                        args=[
                                                                            List(elts=[], ctx=Load())],
                                                                        keywords=[])],
                                                                keywords=[])),
                                                        Assign(
                                                            targets=[
                                                                Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='parent_ommers_hash',
                                                                    ctx=Store())],
                                                            value=Call(
                                                                func=Name(id='Hash32', ctx=Load()),
                                                                args=[
                                                                    Call(
                                                                        func=Name(id='hex_to_bytes', ctx=Load()),
                                                                        args=[
                                                                            Subscript(
                                                                                value=Name(id='data', ctx=Load()),
                                                                                slice=Constant(value='parentUncleHash'),
                                                                                ctx=Load())],
                                                                        keywords=[])],
                                                                keywords=[])),
                                                        Assign(
                                                            targets=[
                                                                Name(id='parent_has_ommers', ctx=Store())],
                                                            value=Compare(
                                                                left=Attribute(
                                                                    value=Name(id='self', ctx=Load()),
                                                                    attr='parent_ommers_hash',
                                                                    ctx=Load()),
                                                                ops=[
                                                                    NotEq()],
                                                                comparators=[
                                                                    Name(id='EMPTY_OMMER_HASH', ctx=Load())])),
                                                        Expr(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='args', ctx=Load()),
                                                                    attr='append',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Name(id='parent_has_ommers', ctx=Load())],
                                                                keywords=[]))],
                                                    orelse=[
                                                        Expr(
                                                            value=Call(
                                                                func=Attribute(
                                                                    value=Name(id='args', ctx=Load()),
                                                                    attr='append',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Constant(value=False)],
                                                                keywords=[]))])],
                                            orelse=[]),
                                        Assign(
                                            targets=[
                                                Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='block_difficulty',
                                                    ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='t8n', ctx=Load()),
                                                        attr='fork',
                                                        ctx=Load()),
                                                    attr='calculate_block_difficulty',
                                                    ctx=Load()),
                                                args=[
                                                    Starred(
                                                        value=Name(id='args', ctx=Load()),
                                                        ctx=Load())],
                                                keywords=[]))])])],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_block_hashes',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the block hashes. Returns a maximum of 256 block hashes.\n        ')),
                        AnnAssign(
                            target=Name(id='block_hashes', ctx=Store()),
                            annotation=Subscript(
                                value=Name(id='List', ctx=Load()),
                                slice=Name(id='Any', ctx=Load()),
                                ctx=Load()),
                            value=List(elts=[], ctx=Load()),
                            simple=1),
                        Assign(
                            targets=[
                                Name(id='max_blockhash_count', ctx=Store())],
                            value=Call(
                                func=Name(id='min', ctx=Load()),
                                args=[
                                    Call(
                                        func=Name(id='Uint', ctx=Load()),
                                        args=[
                                            Constant(value=256)],
                                        keywords=[]),
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='block_number',
                                        ctx=Load())],
                                keywords=[])),
                        For(
                            target=Name(id='number', ctx=Store()),
                            iter=Call(
                                func=Name(id='range', ctx=Load()),
                                args=[
                                    BinOp(
                                        left=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='block_number',
                                            ctx=Load()),
                                        op=Sub(),
                                        right=Name(id='max_blockhash_count', ctx=Load())),
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='block_number',
                                        ctx=Load())],
                                keywords=[]),
                            body=[
                                If(
                                    test=BoolOp(
                                        op=And(),
                                        values=[
                                            Compare(
                                                left=Constant(value='blockHashes'),
                                                ops=[
                                                    In()],
                                                comparators=[
                                                    Name(id='data', ctx=Load())]),
                                            Compare(
                                                left=Call(
                                                    func=Name(id='str', ctx=Load()),
                                                    args=[
                                                        Name(id='number', ctx=Load())],
                                                    keywords=[]),
                                                ops=[
                                                    In()],
                                                comparators=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Constant(value='blockHashes'),
                                                        ctx=Load())])]),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='block_hashes', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='Hash32', ctx=Load()),
                                                        args=[
                                                            Call(
                                                                func=Name(id='hex_to_bytes', ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Subscript(
                                                                            value=Name(id='data', ctx=Load()),
                                                                            slice=Constant(value='blockHashes'),
                                                                            ctx=Load()),
                                                                        slice=Call(
                                                                            func=Name(id='str', ctx=Load()),
                                                                            args=[
                                                                                Name(id='number', ctx=Load())],
                                                                            keywords=[]),
                                                                        ctx=Load())],
                                                                keywords=[])],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='block_hashes', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Constant(value=None)],
                                                keywords=[]))])],
                            orelse=[]),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='block_hashes',
                                    ctx=Store())],
                            value=Name(id='block_hashes', ctx=Load()))],
                    decorator_list=[],
                    returns=Constant(value=None)),
                FunctionDef(
                    name='read_ommers',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='data',
                                annotation=Name(id='Any', ctx=Load())),
                            arg(
                                arg='t8n',
                                annotation=Constant(value='T8N'))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='\n        Read the ommers. The ommers data might not have all the details\n        needed to obtain the Header.\n        ')),
                        Assign(
                            targets=[
                                Name(id='ommers', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        If(
                            test=Compare(
                                left=Constant(value='ommers'),
                                ops=[
                                    In()],
                                comparators=[
                                    Name(id='data', ctx=Load())]),
                            body=[
                                For(
                                    target=Name(id='ommer', ctx=Store()),
                                    iter=Subscript(
                                        value=Name(id='data', ctx=Load()),
                                        slice=Constant(value='ommers'),
                                        ctx=Load()),
                                    body=[
                                        Expr(
                                            value=Call(
                                                func=Attribute(
                                                    value=Name(id='ommers', ctx=Load()),
                                                    attr='append',
                                                    ctx=Load()),
                                                args=[
                                                    Call(
                                                        func=Name(id='Ommer', ctx=Load()),
                                                        args=[
                                                            Subscript(
                                                                value=Name(id='ommer', ctx=Load()),
                                                                slice=Constant(value='delta'),
                                                                ctx=Load()),
                                                            Call(
                                                                func=Attribute(
                                                                    value=Attribute(
                                                                        value=Name(id='t8n', ctx=Load()),
                                                                        attr='fork',
                                                                        ctx=Load()),
                                                                    attr='hex_to_address',
                                                                    ctx=Load()),
                                                                args=[
                                                                    Subscript(
                                                                        value=Name(id='ommer', ctx=Load()),
                                                                        slice=Constant(value='address'),
                                                                        ctx=Load())],
                                                                keywords=[])],
                                                        keywords=[])],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='ommers',
                                    ctx=Store())],
                            value=Name(id='ommers', ctx=Load()))],
                    decorator_list=[],
                    returns=Constant(value=None))],
            decorator_list=[])],
    type_ignores=[])