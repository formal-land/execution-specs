Module(
    body=[
        Expr(
            value=Constant(value='\nLoader for code from the relevant fork.\n')),
        Import(
            names=[
                alias(name='importlib')]),
        ImportFrom(
            module='typing',
            names=[
                alias(name='Any')],
            level=0),
        ImportFrom(
            module='ethereum_spec_tools.forks',
            names=[
                alias(name='Hardfork')],
            level=0),
        ClassDef(
            name='ForkLoad',
            bases=[],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Load the functions and classes from the relevant fork.\n    ')),
                AnnAssign(
                    target=Name(id='_fork_module', ctx=Store()),
                    annotation=Name(id='str', ctx=Load()),
                    simple=1),
                AnnAssign(
                    target=Name(id='_forks', ctx=Store()),
                    annotation=Name(id='Any', ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='fork_module',
                                annotation=Name(id='str', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='_fork_module',
                                    ctx=Store())],
                            value=Name(id='fork_module', ctx=Load())),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='_forks',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='Hardfork', ctx=Load()),
                                    attr='discover',
                                    ctx=Load()),
                                args=[],
                                keywords=[]))],
                    decorator_list=[]),
                FunctionDef(
                    name='fork_module',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Module that contains the fork code')),
                        Return(
                            value=Attribute(
                                value=Name(id='self', ctx=Load()),
                                attr='_fork_module',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='str', ctx=Load())),
                FunctionDef(
                    name='_module',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='name',
                                annotation=Name(id='str', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Imports a module from the fork')),
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='importlib', ctx=Load()),
                                    attr='import_module',
                                    ctx=Load()),
                                args=[
                                    JoinedStr(
                                        values=[
                                            Constant(value='ethereum.'),
                                            FormattedValue(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='_fork_module',
                                                    ctx=Load()),
                                                conversion=-1),
                                            Constant(value='.'),
                                            FormattedValue(
                                                value=Name(id='name', ctx=Load()),
                                                conversion=-1)])],
                                keywords=[]))],
                    decorator_list=[],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='proof_of_stake',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Whether the fork is proof of stake')),
                        For(
                            target=Name(id='fork', ctx=Store()),
                            iter=Attribute(
                                value=Name(id='self', ctx=Load()),
                                attr='_forks',
                                ctx=Load()),
                            body=[
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Name(id='fork', ctx=Load()),
                                            attr='name',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            BinOp(
                                                left=Constant(value='ethereum.'),
                                                op=Add(),
                                                right=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='_fork_module',
                                                    ctx=Load()))]),
                                    body=[
                                        Return(
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='fork', ctx=Load()),
                                                        attr='consensus',
                                                        ctx=Load()),
                                                    attr='is_pos',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[]))],
                                    orelse=[])],
                            orelse=[]),
                        Raise(
                            exc=Call(
                                func=Name(id='Exception', ctx=Load()),
                                args=[
                                    JoinedStr(
                                        values=[
                                            Constant(value='fork '),
                                            FormattedValue(
                                                value=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='_fork_module',
                                                    ctx=Load()),
                                                conversion=-1),
                                            Constant(value=' not discovered')])],
                                keywords=[]))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='bool', ctx=Load())),
                FunctionDef(
                    name='is_after_fork',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='target_fork_name',
                                annotation=Name(id='str', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Check if the fork is after the target fork')),
                        Assign(
                            targets=[
                                Name(id='return_value', ctx=Store())],
                            value=Constant(value=False)),
                        For(
                            target=Name(id='fork', ctx=Store()),
                            iter=Attribute(
                                value=Name(id='self', ctx=Load()),
                                attr='_forks',
                                ctx=Load()),
                            body=[
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Name(id='fork', ctx=Load()),
                                            attr='name',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Name(id='target_fork_name', ctx=Load())]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='return_value', ctx=Store())],
                                            value=Constant(value=True))],
                                    orelse=[]),
                                If(
                                    test=Compare(
                                        left=Attribute(
                                            value=Name(id='fork', ctx=Load()),
                                            attr='name',
                                            ctx=Load()),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            BinOp(
                                                left=Constant(value='ethereum.'),
                                                op=Add(),
                                                right=Attribute(
                                                    value=Name(id='self', ctx=Load()),
                                                    attr='_fork_module',
                                                    ctx=Load()))]),
                                    body=[
                                        Break()],
                                    orelse=[])],
                            orelse=[]),
                        Return(
                            value=Name(id='return_value', ctx=Load()))],
                    decorator_list=[],
                    returns=Name(id='bool', ctx=Load())),
                FunctionDef(
                    name='calculate_block_difficulty',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='calculate_block_difficulty function of the given fork.')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='calculate_block_difficulty',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='calculate_base_fee_per_gas',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='calculate_base_fee_per_gas function of the given fork.')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='calculate_base_fee_per_gas',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='logs_bloom',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='logs_bloom function of the given fork.')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='bloom')],
                                    keywords=[]),
                                attr='logs_bloom',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='BlockChain',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Block chain class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='BlockChain',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='state_transition',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='state_transition function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='state_transition',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='make_receipt',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='make_receipt function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='make_receipt',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash_pre155',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash_pre155 function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash_pre155',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash_155',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash_155 function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash_155',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash_2930',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash_2930 function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash_2930',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash_1559',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash_1559 function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash_1559',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='signing_hash_4844',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='signing_hash_4844 function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='signing_hash_4844',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='check_transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='check_transaction function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='check_transaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='process_transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='process_transaction function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='process_transaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='MAX_BLOB_GAS_PER_BLOCK',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='MAX_BLOB_GAS_PER_BLOCK parameter of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork')],
                                    keywords=[]),
                                attr='MAX_BLOB_GAS_PER_BLOCK',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Block',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Block class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='blocks')],
                                    keywords=[]),
                                attr='Block',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Bloom',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Bloom class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork_types')],
                                    keywords=[]),
                                attr='Bloom',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Header',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Header class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='blocks')],
                                    keywords=[]),
                                attr='Header',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Account',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Account class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='fork_types')],
                                    keywords=[]),
                                attr='Account',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Transaction class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='Transaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='LegacyTransaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Legacytransaction class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='LegacyTransaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='AccessListTransaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Access List transaction class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='AccessListTransaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='FeeMarketTransaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Fee Market transaction class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='FeeMarketTransaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='BlobTransaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Blob transaction class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='BlobTransaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Withdrawal',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Withdrawal class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='blocks')],
                                    keywords=[]),
                                attr='Withdrawal',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='encode_transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='encode_transaction function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='encode_transaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='decode_transaction',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='decode_transaction function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='transactions')],
                                    keywords=[]),
                                attr='decode_transaction',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='State',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='State class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='State',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='TransientStorage',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Transient storage class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='TransientStorage',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='get_account',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='get_account function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='get_account',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='set_account',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='set_account function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='set_account',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='create_ether',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='create_ether function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='create_ether',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='set_storage',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='set_storage function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='set_storage',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='account_exists_and_is_empty',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='account_exists_and_is_empty function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='account_exists_and_is_empty',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='destroy_touched_empty_accounts',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='destroy_account function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='destroy_touched_empty_accounts',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='destroy_account',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='destroy_account function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='destroy_account',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='process_withdrawal',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='process_withdrawal function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='process_withdrawal',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='state_root',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='state_root function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='state_root',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='close_state',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='close_state function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='state')],
                                    keywords=[]),
                                attr='close_state',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Trie',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Trie class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='trie')],
                                    keywords=[]),
                                attr='Trie',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='root',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Root function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='trie')],
                                    keywords=[]),
                                attr='root',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='copy_trie',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='copy_trie function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='trie')],
                                    keywords=[]),
                                attr='copy_trie',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='trie_set',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='trie_set function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='trie')],
                                    keywords=[]),
                                attr='trie_set',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='hex_to_address',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='hex_to_address function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='utils.hexadecimal')],
                                    keywords=[]),
                                attr='hex_to_address',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='hex_to_root',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='hex_to_root function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='utils.hexadecimal')],
                                    keywords=[]),
                                attr='hex_to_root',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Environment',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Environment class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='vm')],
                                    keywords=[]),
                                attr='Environment',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='Message',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='Message class of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='vm')],
                                    keywords=[]),
                                attr='Message',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='TARGET_BLOB_GAS_PER_BLOCK',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='TARGET_BLOB_GAS_PER_BLOCK of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='vm.gas')],
                                    keywords=[]),
                                attr='TARGET_BLOB_GAS_PER_BLOCK',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='calculate_total_blob_gas',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='calculate_total_blob_gas function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='vm.gas')],
                                    keywords=[]),
                                attr='calculate_total_blob_gas',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='process_message_call',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='process_message_call function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='vm.interpreter')],
                                    keywords=[]),
                                attr='process_message_call',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load())),
                FunctionDef(
                    name='apply_dao',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Constant(value='apply_dao function of the fork')),
                        Return(
                            value=Attribute(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='_module',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='dao')],
                                    keywords=[]),
                                attr='apply_dao',
                                ctx=Load()))],
                    decorator_list=[
                        Name(id='property', ctx=Load())],
                    returns=Name(id='Any', ctx=Load()))],
            decorator_list=[])],
    type_ignores=[])