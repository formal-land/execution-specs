Module(
    body=[
        Expr(
            value=Constant(value='\nEthereum Virtual Machine (EVM) Exceptions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. contents:: Table of Contents\n    :backlinks: none\n    :local:\n\nIntroduction\n------------\n\nExceptions which cause the EVM to halt exceptionally.\n')),
        ImportFrom(
            module='ethereum.exceptions',
            names=[
                alias(name='EthereumException')],
            level=0),
        ClassDef(
            name='ExceptionalHalt',
            bases=[
                Name(id='EthereumException', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Indicates that the EVM has experienced an exceptional halt. This causes\n    execution to immediately end with all gas being consumed.\n    '))],
            decorator_list=[]),
        ClassDef(
            name='Revert',
            bases=[
                Name(id='EthereumException', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised by the `REVERT` opcode.\n\n    Unlike other EVM exceptions this does not result in the consumption of all\n    gas.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='StackUnderflowError',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Occurs when a pop is executed on an empty stack.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='StackOverflowError',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Occurs when a push is executed on a stack at max capacity.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='OutOfGasError',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Occurs when an operation costs more than the amount of gas left in the\n    frame.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='InvalidOpcode',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when an invalid opcode is encountered.\n    ')),
                AnnAssign(
                    target=Name(id='code', ctx=Store()),
                    annotation=Name(id='int', ctx=Load()),
                    simple=1),
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(
                                arg='code',
                                annotation=Name(id='int', ctx=Load()))],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='super', ctx=Load()),
                                        args=[],
                                        keywords=[]),
                                    attr='__init__',
                                    ctx=Load()),
                                args=[
                                    Name(id='code', ctx=Load())],
                                keywords=[])),
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='code',
                                    ctx=Store())],
                            value=Name(id='code', ctx=Load()))],
                    decorator_list=[],
                    returns=Constant(value=None))],
            decorator_list=[]),
        ClassDef(
            name='InvalidJumpDestError',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value="\n    Occurs when the destination of a jump operation doesn't meet any of the\n    following criteria:\n\n      * The jump destination is less than the length of the code.\n      * The jump destination should have the `JUMPDEST` opcode (0x5B).\n      * The jump destination shouldn't be part of the data corresponding to\n        `PUSH-N` opcodes.\n    "))],
            decorator_list=[]),
        ClassDef(
            name='StackDepthLimitError',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when the message depth is greater than `1024`\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='WriteInStaticContext',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when an attempt is made to modify the state while operating inside\n    of a STATICCALL context.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='OutOfBoundsRead',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when an attempt was made to read data beyond the\n    boundaries of the buffer.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='InvalidParameter',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when invalid parameters are passed.\n    ')),
                Pass()],
            decorator_list=[]),
        ClassDef(
            name='AddressCollision',
            bases=[
                Name(id='ExceptionalHalt', ctx=Load())],
            keywords=[],
            body=[
                Expr(
                    value=Constant(value='\n    Raised when the new contract address has a collision.\n    ')),
                Pass()],
            decorator_list=[])],
    type_ignores=[])