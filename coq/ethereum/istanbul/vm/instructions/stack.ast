Module(
    body=[
        Expr(
            value=Constant(value='\nEthereum Virtual Machine (EVM) Stack Instructions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. contents:: Table of Contents\n    :backlinks: none\n    :local:\n\nIntroduction\n------------\n\nImplementations of the EVM stack related instructions.\n')),
        ImportFrom(
            module='functools',
            names=[
                alias(name='partial')],
            level=0),
        ImportFrom(
            module='ethereum_types.numeric',
            names=[
                alias(name='U256'),
                alias(name='Uint')],
            level=0),
        ImportFrom(
            names=[
                alias(name='Evm'),
                alias(name='stack')],
            level=2),
        ImportFrom(
            module='exceptions',
            names=[
                alias(name='StackUnderflowError')],
            level=2),
        ImportFrom(
            module='gas',
            names=[
                alias(name='GAS_BASE'),
                alias(name='GAS_VERY_LOW'),
                alias(name='charge_gas')],
            level=2),
        ImportFrom(
            module='memory',
            names=[
                alias(name='buffer_read')],
            level=2),
        FunctionDef(
            name='pop',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    Remove item from stack.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n\n    ')),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='stack', ctx=Load()),
                            attr='pop',
                            ctx=Load()),
                        args=[
                            Attribute(
                                value=Name(id='evm', ctx=Load()),
                                attr='stack',
                                ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Name(id='GAS_BASE', ctx=Load())],
                        keywords=[])),
                Pass(),
                AugAssign(
                    target=Attribute(
                        value=Name(id='evm', ctx=Load()),
                        attr='pc',
                        ctx=Store()),
                    op=Add(),
                    value=Call(
                        func=Name(id='Uint', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]))],
            decorator_list=[],
            returns=Constant(value=None)),
        FunctionDef(
            name='push_n',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load())),
                    arg(
                        arg='num_bytes',
                        annotation=Name(id='int', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    Pushes a N-byte immediate onto the stack.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n\n    num_bytes :\n        The number of immediate bytes to be read from the code and pushed to\n        the stack.\n\n    ')),
                Pass(),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Name(id='GAS_VERY_LOW', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='data_to_push', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='U256', ctx=Load()),
                            attr='from_be_bytes',
                            ctx=Load()),
                        args=[
                            Call(
                                func=Name(id='buffer_read', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='evm', ctx=Load()),
                                        attr='code',
                                        ctx=Load()),
                                    Call(
                                        func=Name(id='U256', ctx=Load()),
                                        args=[
                                            BinOp(
                                                left=Attribute(
                                                    value=Name(id='evm', ctx=Load()),
                                                    attr='pc',
                                                    ctx=Load()),
                                                op=Add(),
                                                right=Call(
                                                    func=Name(id='Uint', ctx=Load()),
                                                    args=[
                                                        Constant(value=1)],
                                                    keywords=[]))],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='U256', ctx=Load()),
                                        args=[
                                            Name(id='num_bytes', ctx=Load())],
                                        keywords=[])],
                                keywords=[])],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='stack', ctx=Load()),
                            attr='push',
                            ctx=Load()),
                        args=[
                            Attribute(
                                value=Name(id='evm', ctx=Load()),
                                attr='stack',
                                ctx=Load()),
                            Name(id='data_to_push', ctx=Load())],
                        keywords=[])),
                AugAssign(
                    target=Attribute(
                        value=Name(id='evm', ctx=Load()),
                        attr='pc',
                        ctx=Store()),
                    op=Add(),
                    value=BinOp(
                        left=Call(
                            func=Name(id='Uint', ctx=Load()),
                            args=[
                                Constant(value=1)],
                            keywords=[]),
                        op=Add(),
                        right=Call(
                            func=Name(id='Uint', ctx=Load()),
                            args=[
                                Name(id='num_bytes', ctx=Load())],
                            keywords=[])))],
            decorator_list=[],
            returns=Constant(value=None)),
        FunctionDef(
            name='dup_n',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load())),
                    arg(
                        arg='item_number',
                        annotation=Name(id='int', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    Duplicate the Nth stack item (from top of the stack) to the top of stack.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n\n    item_number :\n        The stack item number (0-indexed from top of stack) to be duplicated\n        to the top of stack.\n\n    ')),
                Pass(),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Name(id='GAS_VERY_LOW', ctx=Load())],
                        keywords=[])),
                If(
                    test=Compare(
                        left=Name(id='item_number', ctx=Load()),
                        ops=[
                            GtE()],
                        comparators=[
                            Call(
                                func=Name(id='len', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='evm', ctx=Load()),
                                        attr='stack',
                                        ctx=Load())],
                                keywords=[])]),
                    body=[
                        Raise(
                            exc=Name(id='StackUnderflowError', ctx=Load()))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='data_to_duplicate', ctx=Store())],
                    value=Subscript(
                        value=Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='stack',
                            ctx=Load()),
                        slice=BinOp(
                            left=BinOp(
                                left=Call(
                                    func=Name(id='len', ctx=Load()),
                                    args=[
                                        Attribute(
                                            value=Name(id='evm', ctx=Load()),
                                            attr='stack',
                                            ctx=Load())],
                                    keywords=[]),
                                op=Sub(),
                                right=Constant(value=1)),
                            op=Sub(),
                            right=Name(id='item_number', ctx=Load())),
                        ctx=Load())),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='stack', ctx=Load()),
                            attr='push',
                            ctx=Load()),
                        args=[
                            Attribute(
                                value=Name(id='evm', ctx=Load()),
                                attr='stack',
                                ctx=Load()),
                            Name(id='data_to_duplicate', ctx=Load())],
                        keywords=[])),
                AugAssign(
                    target=Attribute(
                        value=Name(id='evm', ctx=Load()),
                        attr='pc',
                        ctx=Store()),
                    op=Add(),
                    value=Call(
                        func=Name(id='Uint', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]))],
            decorator_list=[],
            returns=Constant(value=None)),
        FunctionDef(
            name='swap_n',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load())),
                    arg(
                        arg='item_number',
                        annotation=Name(id='int', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    Swap the top and the `item_number` element of the stack, where\n    the top of the stack is position zero.\n\n    If `item_number` is zero, this function does nothing (which should not be\n    possible, since there is no `SWAP0` instruction).\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n\n    item_number :\n        The stack item number (0-indexed from top of stack) to be swapped\n        with the top of stack element.\n\n    ')),
                Pass(),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Name(id='GAS_VERY_LOW', ctx=Load())],
                        keywords=[])),
                If(
                    test=Compare(
                        left=Name(id='item_number', ctx=Load()),
                        ops=[
                            GtE()],
                        comparators=[
                            Call(
                                func=Name(id='len', ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='evm', ctx=Load()),
                                        attr='stack',
                                        ctx=Load())],
                                keywords=[])]),
                    body=[
                        Raise(
                            exc=Name(id='StackUnderflowError', ctx=Load()))],
                    orelse=[]),
                Assign(
                    targets=[
                        Tuple(
                            elts=[
                                Subscript(
                                    value=Attribute(
                                        value=Name(id='evm', ctx=Load()),
                                        attr='stack',
                                        ctx=Load()),
                                    slice=UnaryOp(
                                        op=USub(),
                                        operand=Constant(value=1)),
                                    ctx=Store()),
                                Subscript(
                                    value=Attribute(
                                        value=Name(id='evm', ctx=Load()),
                                        attr='stack',
                                        ctx=Load()),
                                    slice=BinOp(
                                        left=UnaryOp(
                                            op=USub(),
                                            operand=Constant(value=1)),
                                        op=Sub(),
                                        right=Name(id='item_number', ctx=Load())),
                                    ctx=Store())],
                            ctx=Store())],
                    value=Tuple(
                        elts=[
                            Subscript(
                                value=Attribute(
                                    value=Name(id='evm', ctx=Load()),
                                    attr='stack',
                                    ctx=Load()),
                                slice=BinOp(
                                    left=UnaryOp(
                                        op=USub(),
                                        operand=Constant(value=1)),
                                    op=Sub(),
                                    right=Name(id='item_number', ctx=Load())),
                                ctx=Load()),
                            Subscript(
                                value=Attribute(
                                    value=Name(id='evm', ctx=Load()),
                                    attr='stack',
                                    ctx=Load()),
                                slice=UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=1)),
                                ctx=Load())],
                        ctx=Load())),
                AugAssign(
                    target=Attribute(
                        value=Name(id='evm', ctx=Load()),
                        attr='pc',
                        ctx=Store()),
                    op=Add(),
                    value=Call(
                        func=Name(id='Uint', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]))],
            decorator_list=[],
            returns=Constant(value=None)),
        Assign(
            targets=[
                Name(id='push1', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=1))])),
        Assign(
            targets=[
                Name(id='push2', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=2))])),
        Assign(
            targets=[
                Name(id='push3', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=3))])),
        Assign(
            targets=[
                Name(id='push4', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=4))])),
        Assign(
            targets=[
                Name(id='push5', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=5))])),
        Assign(
            targets=[
                Name(id='push6', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=6))])),
        Assign(
            targets=[
                Name(id='push7', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=7))])),
        Assign(
            targets=[
                Name(id='push8', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=8))])),
        Assign(
            targets=[
                Name(id='push9', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=9))])),
        Assign(
            targets=[
                Name(id='push10', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=10))])),
        Assign(
            targets=[
                Name(id='push11', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=11))])),
        Assign(
            targets=[
                Name(id='push12', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=12))])),
        Assign(
            targets=[
                Name(id='push13', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=13))])),
        Assign(
            targets=[
                Name(id='push14', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=14))])),
        Assign(
            targets=[
                Name(id='push15', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=15))])),
        Assign(
            targets=[
                Name(id='push16', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=16))])),
        Assign(
            targets=[
                Name(id='push17', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=17))])),
        Assign(
            targets=[
                Name(id='push18', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=18))])),
        Assign(
            targets=[
                Name(id='push19', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=19))])),
        Assign(
            targets=[
                Name(id='push20', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=20))])),
        Assign(
            targets=[
                Name(id='push21', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=21))])),
        Assign(
            targets=[
                Name(id='push22', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=22))])),
        Assign(
            targets=[
                Name(id='push23', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=23))])),
        Assign(
            targets=[
                Name(id='push24', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=24))])),
        Assign(
            targets=[
                Name(id='push25', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=25))])),
        Assign(
            targets=[
                Name(id='push26', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=26))])),
        Assign(
            targets=[
                Name(id='push27', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=27))])),
        Assign(
            targets=[
                Name(id='push28', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=28))])),
        Assign(
            targets=[
                Name(id='push29', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=29))])),
        Assign(
            targets=[
                Name(id='push30', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=30))])),
        Assign(
            targets=[
                Name(id='push31', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=31))])),
        Assign(
            targets=[
                Name(id='push32', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='push_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='num_bytes',
                        value=Constant(value=32))])),
        Assign(
            targets=[
                Name(id='dup1', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=0))])),
        Assign(
            targets=[
                Name(id='dup2', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=1))])),
        Assign(
            targets=[
                Name(id='dup3', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=2))])),
        Assign(
            targets=[
                Name(id='dup4', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=3))])),
        Assign(
            targets=[
                Name(id='dup5', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=4))])),
        Assign(
            targets=[
                Name(id='dup6', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=5))])),
        Assign(
            targets=[
                Name(id='dup7', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=6))])),
        Assign(
            targets=[
                Name(id='dup8', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=7))])),
        Assign(
            targets=[
                Name(id='dup9', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=8))])),
        Assign(
            targets=[
                Name(id='dup10', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=9))])),
        Assign(
            targets=[
                Name(id='dup11', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=10))])),
        Assign(
            targets=[
                Name(id='dup12', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=11))])),
        Assign(
            targets=[
                Name(id='dup13', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=12))])),
        Assign(
            targets=[
                Name(id='dup14', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=13))])),
        Assign(
            targets=[
                Name(id='dup15', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=14))])),
        Assign(
            targets=[
                Name(id='dup16', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='dup_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=15))])),
        Assign(
            targets=[
                Name(id='swap1', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=1))])),
        Assign(
            targets=[
                Name(id='swap2', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=2))])),
        Assign(
            targets=[
                Name(id='swap3', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=3))])),
        Assign(
            targets=[
                Name(id='swap4', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=4))])),
        Assign(
            targets=[
                Name(id='swap5', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=5))])),
        Assign(
            targets=[
                Name(id='swap6', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=6))])),
        Assign(
            targets=[
                Name(id='swap7', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=7))])),
        Assign(
            targets=[
                Name(id='swap8', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=8))])),
        Assign(
            targets=[
                Name(id='swap9', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=9))])),
        Assign(
            targets=[
                Name(id='swap10', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=10))])),
        Assign(
            targets=[
                Name(id='swap11', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=11))])),
        Assign(
            targets=[
                Name(id='swap12', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=12))])),
        Assign(
            targets=[
                Name(id='swap13', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=13))])),
        Assign(
            targets=[
                Name(id='swap14', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=14))])),
        Assign(
            targets=[
                Name(id='swap15', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=15))])),
        Assign(
            targets=[
                Name(id='swap16', ctx=Store())],
            value=Call(
                func=Name(id='partial', ctx=Load()),
                args=[
                    Name(id='swap_n', ctx=Load())],
                keywords=[
                    keyword(
                        arg='item_number',
                        value=Constant(value=16))]))],
    type_ignores=[])