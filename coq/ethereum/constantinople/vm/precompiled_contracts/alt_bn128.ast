Module(
    body=[
        Expr(
            value=Constant(value='\nEthereum Virtual Machine (EVM) ALT_BN128 CONTRACTS\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. contents:: Table of Contents\n    :backlinks: none\n    :local:\n\nIntroduction\n------------\n\nImplementation of the ALT_BN128 precompiled contracts.\n')),
        ImportFrom(
            module='ethereum_types.numeric',
            names=[
                alias(name='U256'),
                alias(name='Uint')],
            level=0),
        ImportFrom(
            module='ethereum.crypto.alt_bn128',
            names=[
                alias(name='ALT_BN128_CURVE_ORDER'),
                alias(name='ALT_BN128_PRIME'),
                alias(name='BNF'),
                alias(name='BNF2'),
                alias(name='BNF12'),
                alias(name='BNP'),
                alias(name='BNP2'),
                alias(name='pairing')],
            level=0),
        ImportFrom(
            module='vm',
            names=[
                alias(name='Evm')],
            level=3),
        ImportFrom(
            module='vm.gas',
            names=[
                alias(name='charge_gas')],
            level=3),
        ImportFrom(
            module='vm.memory',
            names=[
                alias(name='buffer_read')],
            level=3),
        ImportFrom(
            module='exceptions',
            names=[
                alias(name='OutOfGasError')],
            level=2),
        FunctionDef(
            name='alt_bn128_add',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    The ALT_BN128 addition precompiled contract.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n    ')),
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Attribute(
                        value=Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='message',
                            ctx=Load()),
                        attr='data',
                        ctx=Load())),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Call(
                                func=Name(id='Uint', ctx=Load()),
                                args=[
                                    Constant(value=500)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x0_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=0)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x0_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='x0_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y0_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y0_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='y0_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x1_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=64)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x1_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='x1_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y1_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=96)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y1_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='y1_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                For(
                    target=Name(id='i', ctx=Store()),
                    iter=Tuple(
                        elts=[
                            Name(id='x0_value', ctx=Load()),
                            Name(id='y0_value', ctx=Load()),
                            Name(id='x1_value', ctx=Load()),
                            Name(id='y1_value', ctx=Load())],
                        ctx=Load()),
                    body=[
                        If(
                            test=Compare(
                                left=Name(id='i', ctx=Load()),
                                ops=[
                                    GtE()],
                                comparators=[
                                    Name(id='ALT_BN128_PRIME', ctx=Load())]),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))],
                            orelse=[])],
                    orelse=[]),
                Try(
                    body=[
                        Assign(
                            targets=[
                                Name(id='p0', ctx=Store())],
                            value=Call(
                                func=Name(id='BNP', ctx=Load()),
                                args=[
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='x0_value', ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='y0_value', ctx=Load())],
                                        keywords=[])],
                                keywords=[])),
                        Assign(
                            targets=[
                                Name(id='p1', ctx=Store())],
                            value=Call(
                                func=Name(id='BNP', ctx=Load()),
                                args=[
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='x1_value', ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='y1_value', ctx=Load())],
                                        keywords=[])],
                                keywords=[]))],
                    handlers=[
                        ExceptHandler(
                            type=Name(id='ValueError', ctx=Load()),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))])],
                    orelse=[],
                    finalbody=[]),
                Assign(
                    targets=[
                        Name(id='p', ctx=Store())],
                    value=BinOp(
                        left=Name(id='p0', ctx=Load()),
                        op=Add(),
                        right=Name(id='p1', ctx=Load()))),
                Assign(
                    targets=[
                        Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='output',
                            ctx=Store())],
                    value=BinOp(
                        left=Call(
                            func=Attribute(
                                value=Attribute(
                                    value=Name(id='p', ctx=Load()),
                                    attr='x',
                                    ctx=Load()),
                                attr='to_be_bytes32',
                                ctx=Load()),
                            args=[],
                            keywords=[]),
                        op=Add(),
                        right=Call(
                            func=Attribute(
                                value=Attribute(
                                    value=Name(id='p', ctx=Load()),
                                    attr='y',
                                    ctx=Load()),
                                attr='to_be_bytes32',
                                ctx=Load()),
                            args=[],
                            keywords=[])))],
            decorator_list=[],
            returns=Constant(value=None)),
        FunctionDef(
            name='alt_bn128_mul',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    The ALT_BN128 multiplication precompiled contract.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n    ')),
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Attribute(
                        value=Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='message',
                            ctx=Load()),
                        attr='data',
                        ctx=Load())),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Call(
                                func=Name(id='Uint', ctx=Load()),
                                args=[
                                    Constant(value=40000)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x0_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=0)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x0_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='x0_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y0_bytes', ctx=Store())],
                    value=Call(
                        func=Name(id='buffer_read', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load()),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[]),
                            Call(
                                func=Name(id='U256', ctx=Load()),
                                args=[
                                    Constant(value=32)],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y0_value', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Name(id='y0_bytes', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n', ctx=Store())],
                    value=Call(
                        func=Name(id='int', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='U256', ctx=Load()),
                                    attr='from_be_bytes',
                                    ctx=Load()),
                                args=[
                                    Call(
                                        func=Name(id='buffer_read', ctx=Load()),
                                        args=[
                                            Name(id='data', ctx=Load()),
                                            Call(
                                                func=Name(id='U256', ctx=Load()),
                                                args=[
                                                    Constant(value=64)],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='U256', ctx=Load()),
                                                args=[
                                                    Constant(value=32)],
                                                keywords=[])],
                                        keywords=[])],
                                keywords=[])],
                        keywords=[])),
                For(
                    target=Name(id='i', ctx=Store()),
                    iter=Tuple(
                        elts=[
                            Name(id='x0_value', ctx=Load()),
                            Name(id='y0_value', ctx=Load())],
                        ctx=Load()),
                    body=[
                        If(
                            test=Compare(
                                left=Name(id='i', ctx=Load()),
                                ops=[
                                    GtE()],
                                comparators=[
                                    Name(id='ALT_BN128_PRIME', ctx=Load())]),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))],
                            orelse=[])],
                    orelse=[]),
                Try(
                    body=[
                        Assign(
                            targets=[
                                Name(id='p0', ctx=Store())],
                            value=Call(
                                func=Name(id='BNP', ctx=Load()),
                                args=[
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='x0_value', ctx=Load())],
                                        keywords=[]),
                                    Call(
                                        func=Name(id='BNF', ctx=Load()),
                                        args=[
                                            Name(id='y0_value', ctx=Load())],
                                        keywords=[])],
                                keywords=[]))],
                    handlers=[
                        ExceptHandler(
                            type=Name(id='ValueError', ctx=Load()),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))])],
                    orelse=[],
                    finalbody=[]),
                Assign(
                    targets=[
                        Name(id='p', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='p0', ctx=Load()),
                            attr='mul_by',
                            ctx=Load()),
                        args=[
                            Name(id='n', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='output',
                            ctx=Store())],
                    value=BinOp(
                        left=Call(
                            func=Attribute(
                                value=Attribute(
                                    value=Name(id='p', ctx=Load()),
                                    attr='x',
                                    ctx=Load()),
                                attr='to_be_bytes32',
                                ctx=Load()),
                            args=[],
                            keywords=[]),
                        op=Add(),
                        right=Call(
                            func=Attribute(
                                value=Attribute(
                                    value=Name(id='p', ctx=Load()),
                                    attr='y',
                                    ctx=Load()),
                                attr='to_be_bytes32',
                                ctx=Load()),
                            args=[],
                            keywords=[])))],
            decorator_list=[],
            returns=Constant(value=None)),
        FunctionDef(
            name='alt_bn128_pairing_check',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(
                        arg='evm',
                        annotation=Name(id='Evm', ctx=Load()))],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Expr(
                    value=Constant(value='\n    The ALT_BN128 pairing check precompiled contract.\n\n    Parameters\n    ----------\n    evm :\n        The current EVM frame.\n    ')),
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Attribute(
                        value=Attribute(
                            value=Name(id='evm', ctx=Load()),
                            attr='message',
                            ctx=Load()),
                        attr='data',
                        ctx=Load())),
                Expr(
                    value=Call(
                        func=Name(id='charge_gas', ctx=Load()),
                        args=[
                            Name(id='evm', ctx=Load()),
                            Call(
                                func=Name(id='Uint', ctx=Load()),
                                args=[
                                    BinOp(
                                        left=BinOp(
                                            left=Constant(value=80000),
                                            op=Mult(),
                                            right=BinOp(
                                                left=Call(
                                                    func=Name(id='len', ctx=Load()),
                                                    args=[
                                                        Name(id='data', ctx=Load())],
                                                    keywords=[]),
                                                op=FloorDiv(),
                                                right=Constant(value=192))),
                                        op=Add(),
                                        right=Constant(value=100000))],
                                keywords=[])],
                        keywords=[])),
                If(
                    test=Compare(
                        left=BinOp(
                            left=Call(
                                func=Name(id='len', ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load())],
                                keywords=[]),
                            op=Mod(),
                            right=Constant(value=192)),
                        ops=[
                            NotEq()],
                        comparators=[
                            Constant(value=0)]),
                    body=[
                        Raise(
                            exc=Name(id='OutOfGasError', ctx=Load()))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='BNF12', ctx=Load()),
                            attr='from_int',
                            ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[])),
                For(
                    target=Name(id='i', ctx=Store()),
                    iter=Call(
                        func=Name(id='range', ctx=Load()),
                        args=[
                            BinOp(
                                left=Call(
                                    func=Name(id='len', ctx=Load()),
                                    args=[
                                        Name(id='data', ctx=Load())],
                                    keywords=[]),
                                op=FloorDiv(),
                                right=Constant(value=192))],
                        keywords=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='values', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        For(
                            target=Name(id='j', ctx=Store()),
                            iter=Call(
                                func=Name(id='range', ctx=Load()),
                                args=[
                                    Constant(value=6)],
                                keywords=[]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='value', ctx=Store())],
                                    value=Call(
                                        func=Name(id='int', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='U256', ctx=Load()),
                                                    attr='from_be_bytes',
                                                    ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='data', ctx=Load()),
                                                        slice=Slice(
                                                            lower=BinOp(
                                                                left=BinOp(
                                                                    left=Name(id='i', ctx=Load()),
                                                                    op=Mult(),
                                                                    right=Constant(value=192)),
                                                                op=Add(),
                                                                right=BinOp(
                                                                    left=Constant(value=32),
                                                                    op=Mult(),
                                                                    right=Name(id='j', ctx=Load()))),
                                                            upper=BinOp(
                                                                left=BinOp(
                                                                    left=Name(id='i', ctx=Load()),
                                                                    op=Mult(),
                                                                    right=Constant(value=192)),
                                                                op=Add(),
                                                                right=BinOp(
                                                                    left=Constant(value=32),
                                                                    op=Mult(),
                                                                    right=BinOp(
                                                                        left=Name(id='j', ctx=Load()),
                                                                        op=Add(),
                                                                        right=Constant(value=1))))),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Name(id='value', ctx=Load()),
                                        ops=[
                                            GtE()],
                                        comparators=[
                                            Name(id='ALT_BN128_PRIME', ctx=Load())]),
                                    body=[
                                        Raise(
                                            exc=Name(id='OutOfGasError', ctx=Load()))],
                                    orelse=[]),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='values', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Name(id='value', ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        Try(
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='p', ctx=Store())],
                                    value=Call(
                                        func=Name(id='BNP', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='BNF', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='values', ctx=Load()),
                                                        slice=Constant(value=0),
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='BNF', ctx=Load()),
                                                args=[
                                                    Subscript(
                                                        value=Name(id='values', ctx=Load()),
                                                        slice=Constant(value=1),
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='q', ctx=Store())],
                                    value=Call(
                                        func=Name(id='BNP2', ctx=Load()),
                                        args=[
                                            Call(
                                                func=Name(id='BNF2', ctx=Load()),
                                                args=[
                                                    Tuple(
                                                        elts=[
                                                            Subscript(
                                                                value=Name(id='values', ctx=Load()),
                                                                slice=Constant(value=3),
                                                                ctx=Load()),
                                                            Subscript(
                                                                value=Name(id='values', ctx=Load()),
                                                                slice=Constant(value=2),
                                                                ctx=Load())],
                                                        ctx=Load())],
                                                keywords=[]),
                                            Call(
                                                func=Name(id='BNF2', ctx=Load()),
                                                args=[
                                                    Tuple(
                                                        elts=[
                                                            Subscript(
                                                                value=Name(id='values', ctx=Load()),
                                                                slice=Constant(value=5),
                                                                ctx=Load()),
                                                            Subscript(
                                                                value=Name(id='values', ctx=Load()),
                                                                slice=Constant(value=4),
                                                                ctx=Load())],
                                                        ctx=Load())],
                                                keywords=[])],
                                        keywords=[]))],
                            handlers=[
                                ExceptHandler(
                                    type=Name(id='ValueError', ctx=Load()),
                                    body=[
                                        Raise(
                                            exc=Call(
                                                func=Name(id='OutOfGasError', ctx=Load()),
                                                args=[],
                                                keywords=[]))])],
                            orelse=[],
                            finalbody=[]),
                        If(
                            test=Compare(
                                left=Call(
                                    func=Attribute(
                                        value=Name(id='p', ctx=Load()),
                                        attr='mul_by',
                                        ctx=Load()),
                                    args=[
                                        Name(id='ALT_BN128_CURVE_ORDER', ctx=Load())],
                                    keywords=[]),
                                ops=[
                                    NotEq()],
                                comparators=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='BNP', ctx=Load()),
                                            attr='point_at_infinity',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])]),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Call(
                                    func=Attribute(
                                        value=Name(id='q', ctx=Load()),
                                        attr='mul_by',
                                        ctx=Load()),
                                    args=[
                                        Name(id='ALT_BN128_CURVE_ORDER', ctx=Load())],
                                    keywords=[]),
                                ops=[
                                    NotEq()],
                                comparators=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='BNP2', ctx=Load()),
                                            attr='point_at_infinity',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])]),
                            body=[
                                Raise(
                                    exc=Name(id='OutOfGasError', ctx=Load()))],
                            orelse=[]),
                        If(
                            test=BoolOp(
                                op=And(),
                                values=[
                                    Compare(
                                        left=Name(id='p', ctx=Load()),
                                        ops=[
                                            NotEq()],
                                        comparators=[
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='BNP', ctx=Load()),
                                                    attr='point_at_infinity',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[])]),
                                    Compare(
                                        left=Name(id='q', ctx=Load()),
                                        ops=[
                                            NotEq()],
                                        comparators=[
                                            Call(
                                                func=Attribute(
                                                    value=Name(id='BNP2', ctx=Load()),
                                                    attr='point_at_infinity',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[])])]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='result', ctx=Store())],
                                    value=BinOp(
                                        left=Name(id='result', ctx=Load()),
                                        op=Mult(),
                                        right=Call(
                                            func=Name(id='pairing', ctx=Load()),
                                            args=[
                                                Name(id='q', ctx=Load()),
                                                Name(id='p', ctx=Load())],
                                            keywords=[])))],
                            orelse=[])],
                    orelse=[]),
                If(
                    test=Compare(
                        left=Name(id='result', ctx=Load()),
                        ops=[
                            Eq()],
                        comparators=[
                            Call(
                                func=Attribute(
                                    value=Name(id='BNF12', ctx=Load()),
                                    attr='from_int',
                                    ctx=Load()),
                                args=[
                                    Constant(value=1)],
                                keywords=[])]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='evm', ctx=Load()),
                                    attr='output',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='U256', ctx=Load()),
                                        args=[
                                            Constant(value=1)],
                                        keywords=[]),
                                    attr='to_be_bytes32',
                                    ctx=Load()),
                                args=[],
                                keywords=[]))],
                    orelse=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='evm', ctx=Load()),
                                    attr='output',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Name(id='U256', ctx=Load()),
                                        args=[
                                            Constant(value=0)],
                                        keywords=[]),
                                    attr='to_be_bytes32',
                                    ctx=Load()),
                                args=[],
                                keywords=[]))])],
            decorator_list=[],
            returns=Constant(value=None))],
    type_ignores=[])